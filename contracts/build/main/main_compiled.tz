parameter (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value)))))));
storage   (pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%addTokens
                    # == addTokens ==
                    # sp.verify(sp.sender == self.data.token.open_some()) # @storage : @parameter%addTokens
                    DUP;        # @storage : @storage : @parameter%addTokens
                    DUG 2;      # @storage : @parameter%addTokens : @storage
                    CDDADR;     # option address : @parameter%addTokens : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 558; # int : @parameter%addTokens : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%addTokens : @storage
                    SENDER;     # address : @some : @parameter%addTokens : @storage
                    COMPARE;    # int : @parameter%addTokens : @storage
                    EQ;         # bool : @parameter%addTokens : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.token.open_some()"; # string : @parameter%addTokens : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%addTokens : @storage
                    SWAP;       # @storage : @parameter%addTokens
                    # if ~ (self.data.holders.contains(params.address)): # @storage : @parameter%addTokens
                    DUP;        # @storage : @storage : @parameter%addTokens
                    DUG 2;      # @storage : @parameter%addTokens : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%addTokens : @storage
                    SWAP;       # @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%addTokens : @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%addTokens : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%addTokens : @storage
                    MEM;        # bool : @parameter%addTokens : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addTokens
                        # self.data.holders[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%addTokens
                        DUP;        # @storage : @storage : @parameter%addTokens
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : @parameter%addTokens
                        SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        DUP;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CDR;        # pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        SWAP;       # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CAR;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        DUP;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CDR;        # nat : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        SWAP;       # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        DIG 5;      # @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        DUP;        # @parameter%addTokens : @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        DUG 6;      # @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        PUSH (option (pair (map %approvals address nat) (nat %balance))) (Some (Pair {} 0)); # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        SWAP;       # address : option (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        UPDATE;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        PAIR;       # pair (big_map address (pair (map %approvals address nat) (nat %balance))) nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        PAIR;       # pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%addTokens
                        SWAP;       # @parameter%addTokens : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map %approvals address nat) (nat %balance))) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # @parameter%addTokens : @storage
                    SWAP;       # @storage : @parameter%addTokens
                    # self.data.holders[params.address].balance += params.value # @storage : @parameter%addTokens
                    DUP;        # @storage : @storage : @parameter%addTokens
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : @parameter%addTokens
                    SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DUP;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CDR;        # pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    SWAP;       # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CAR;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DUP;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CDR;        # nat : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    SWAP;       # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DIG 6;      # @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUP;        # @parameter%addTokens : @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUG 7;      # @parameter%addTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    IF_SOME
                      {}
                      {
                        PUSH int 566; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DUP;        # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CAR;        # map address nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    SWAP;       # @some : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    CDR;        # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%addTokens
                    DIG 8;      # @parameter%addTokens : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    CDR;        # nat : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    ADD;        # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (map address nat) nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%decreaseApproval
                    # == decreaseApproval ==
                    # sp.verify(sp.sender == self.data.token.open_some()) # @storage : @parameter%decreaseApproval
                    DUP;        # @storage : @storage : @parameter%decreaseApproval
                    DUG 2;      # @storage : @parameter%decreaseApproval : @storage
                    CDDADR;     # option address : @parameter%decreaseApproval : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 558; # int : @parameter%decreaseApproval : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%decreaseApproval : @storage
                    SENDER;     # address : @some : @parameter%decreaseApproval : @storage
                    COMPARE;    # int : @parameter%decreaseApproval : @storage
                    EQ;         # bool : @parameter%decreaseApproval : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.token.open_some()"; # string : @parameter%decreaseApproval : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%decreaseApproval : @storage
                    SWAP;       # @storage : @parameter%decreaseApproval
                    # self.data.holders[params.owner].approvals[params.address] = sp.as_nat(self.data.holders[params.owner].approvals[params.address] - params.value) # @storage : @parameter%decreaseApproval
                    DUP;        # @storage : @storage : @parameter%decreaseApproval
                    DUG 2;      # @storage : @parameter%decreaseApproval : @storage
                    DUP;        # @storage : @storage : @parameter%decreaseApproval : @storage
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : @parameter%decreaseApproval : @storage
                    SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DUP;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CDR;        # pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    SWAP;       # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CAR;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DUP;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CDR;        # nat : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    SWAP;       # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DIG 6;      # @parameter%decreaseApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUP;        # @parameter%decreaseApproval : @parameter%decreaseApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUG 7;      # @parameter%decreaseApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CDAR;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 669; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DUP;        # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CDR;        # nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    SWAP;       # @some : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CAR;        # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DIG 8;      # @parameter%decreaseApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUP;        # @parameter%decreaseApproval : @parameter%decreaseApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    CAR;        # address : @parameter%decreaseApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    SWAP;       # @parameter%decreaseApproval : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUP;        # @parameter%decreaseApproval : @parameter%decreaseApproval : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUG 10;     # @parameter%decreaseApproval : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    CDDR;       # nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval : @storage
                    DIG 11;     # @storage : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                    DIG 11;     # @parameter%decreaseApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUP;        # @parameter%decreaseApproval : @parameter%decreaseApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUG 12;     # @parameter%decreaseApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                    CDAR;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                    IF_SOME
                      {
                        # of_some: Get-item:670 # @some : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                      }
                      {
                        PUSH int 670; # int : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                        FAILWITH;   # FAILED
                      }; # @some : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                    CAR;        # map address nat : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%decreaseApproval
                    DIG 11;     # @parameter%decreaseApproval : map address nat : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    CAR;        # address : map address nat : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    GET;        # option nat : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    IF_SOME
                      {
                        # of_some: Get-item:670 # @some : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                      }
                      {
                        PUSH int 670; # int : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SUB;        # int : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    ISNAT;      # option nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    IF_SOME
                      {}
                      {
                        PUSH int 669; # int : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        FAILWITH;   # FAILED
                      }; # @some : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SOME;       # option nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # address : option nat : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    UPDATE;     # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (map address nat) nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                NIL operation; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }
              {
                IF_LEFT
                  {
                    # == donateToRound ==
                    # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1) # @parameter%donateToRound : @storage
                    PUSH int 1; # int : @parameter%donateToRound : @storage
                    DIG 2;      # @storage : int : @parameter%donateToRound
                    DUP;        # @storage : @storage : int : @parameter%donateToRound
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%donateToRound
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1114 # @some : int : @parameter%donateToRound : @storage
                      }
                      {
                        PUSH int 1114; # int : int : @parameter%donateToRound : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%donateToRound : @storage
                    CDAAR;      # int : int : @parameter%donateToRound : @storage
                    COMPARE;    # int : @parameter%donateToRound : @storage
                    EQ;         # bool : @parameter%donateToRound : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1"; # string : @parameter%donateToRound : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%donateToRound : @storage
                    SWAP;       # @storage : @parameter%donateToRound
                    # sp.verify(~ self.data.newRoundProposals[self.data.newRoundProposalId].listed) # @storage : @parameter%donateToRound
                    DUP;        # @storage : @storage : @parameter%donateToRound
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%donateToRound
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1114 # @some : @parameter%donateToRound : @storage
                      }
                      {
                        PUSH int 1114; # int : @parameter%donateToRound : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%donateToRound : @storage
                    CADDAR;     # bool : @parameter%donateToRound : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ self.data.newRoundProposals[self.data.newRoundProposalId].listed"; # string : @parameter%donateToRound : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%donateToRound : @storage
                    SWAP;       # @storage : @parameter%donateToRound
                    # sp.verify(~ (self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds.contains(sp.sender))) # @storage : @parameter%donateToRound
                    DUP;        # @storage : @storage : @parameter%donateToRound
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%donateToRound
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1114 # @some : @parameter%donateToRound : @storage
                      }
                      {
                        PUSH int 1114; # int : @parameter%donateToRound : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%donateToRound : @storage
                    CDADAR;     # map address (pair (mutez %amount) (string %name)) : @parameter%donateToRound : @storage
                    SENDER;     # address : map address (pair (mutez %amount) (string %name)) : @parameter%donateToRound : @storage
                    MEM;        # bool : @parameter%donateToRound : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ (self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds.contains(sp.sender))"; # string : @parameter%donateToRound : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%donateToRound : @storage
                    SWAP;       # @storage : @parameter%donateToRound
                    # self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds[sp.sender] = sp.record(amount = sp.amount, name = params.name) # @storage : @parameter%donateToRound
                    DUP;        # @storage : @storage : @parameter%donateToRound
                    DUG 2;      # @storage : @parameter%donateToRound : @storage
                    DUP;        # @storage : @storage : @parameter%donateToRound : @storage
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%donateToRound : @storage
                    SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CDR;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    DUP;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CAR;        # bool : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    SWAP;       # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CDR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound : @storage
                    DIG 8;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    IF_SOME
                      {}
                      {
                        PUSH int 1122; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                        FAILWITH;   # FAILED
                      }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    DUP;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CAR;        # int : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CDR;        # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    DUP;        # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CDR;        # timestamp : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    SWAP;       # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    CAR;        # map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    SENDER;     # address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%donateToRound
                    DIG 13;     # @parameter%donateToRound : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    AMOUNT;     # mutez : @parameter%donateToRound : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR %amount %name; # pair (mutez %amount) (@parameter%donateToRound %name) : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SOME;       # option (pair (mutez %amount) (@parameter%donateToRound %name)) : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # address : option (pair (mutez %amount) (@parameter%donateToRound %name)) : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    UPDATE;     # map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (map address (pair (mutez %amount) (string %name))) timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # int : pair (map address (pair (mutez %amount) (string %name))) timestamp : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    # self.data.newRoundProposals[self.data.newRoundProposalId].totalFunds += sp.amount # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # bool : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # nat : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 7;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    IF_SOME
                      {}
                      {
                        PUSH int 1126; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CDR;        # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUP;        # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CAR;        # pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUP;        # pair (mutez %totalFunds) (map %voters address nat) : pair (mutez %totalFunds) (map %voters address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CDR;        # map address nat : pair (mutez %totalFunds) (map %voters address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    CAR;        # mutez : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    AMOUNT;     # mutez : mutez : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    ADD;        # mutez : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair mutez (map address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    NIL operation; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # == executeNewRoundProposal ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%executeNewRoundProposal : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%executeNewRoundProposal : @storage
                    MEM;        # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {
                        PUSH nat 0; # nat : @parameter%executeNewRoundProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%executeNewRoundProposal
                        DUG 3;      # @storage : nat : @parameter%executeNewRoundProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeNewRoundProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeNewRoundProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1048 # @some : nat : @parameter%executeNewRoundProposal : @storage
                          }
                          {
                            PUSH int 1048; # int : nat : @parameter%executeNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%executeNewRoundProposal : @storage
                        CDR;        # nat : nat : @parameter%executeNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                        GT;         # bool : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%executeNewRoundProposal : @storage
                      }; # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # sp.verify(self.data.newRoundProposalActive) # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                    CDADAR;     # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposalActive"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # sp.verify(sp.now > self.data.newRoundProposals[self.data.newRoundProposalId].expiry) # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1055 # @some : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 1055; # int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%executeNewRoundProposal : @storage
                    CADAR;      # timestamp : @parameter%executeNewRoundProposal : @storage
                    NOW;        # timestamp : timestamp : @parameter%executeNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                    GT;         # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now > self.data.newRoundProposals[self.data.newRoundProposalId].expiry"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0) # @parameter%executeNewRoundProposal : @storage
                    PUSH int 0; # int : @parameter%executeNewRoundProposal : @storage
                    DIG 2;      # @storage : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : int : @parameter%executeNewRoundProposal
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1055 # @some : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 1055; # int : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%executeNewRoundProposal : @storage
                    CDAAR;      # int : int : @parameter%executeNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                    EQ;         # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # if (((self.data.newRoundProposals[self.data.newRoundProposalId].votesYes * self.data.newRoundProposals[self.data.newRoundProposalId].votesYes) - (self.data.newRoundProposals[self.data.newRoundProposalId].votesNo * self.data.newRoundProposals[self.data.newRoundProposalId].votesNo)) > self.data.minimumVoteDifference) & (sp.len(self.data.newRoundProposals[self.data.newRoundProposalId].voters) >= self.data.minNewRoundProposalVotes): # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    CDAADR;     # int : @storage : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : int : @parameter%executeNewRoundProposal
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1055 # @some : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 1055; # int : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%executeNewRoundProposal : @storage
                    CDDDAR;     # nat : int : @parameter%executeNewRoundProposal : @storage
                    DIG 3;      # @storage : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : nat : int : @parameter%executeNewRoundProposal
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUG 5;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1055 # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 1055; # int : nat : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDDAR;     # nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    MUL;        # nat : int : @parameter%executeNewRoundProposal : @storage
                    DIG 3;      # @storage : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : nat : int : @parameter%executeNewRoundProposal
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUG 5;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1055 # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 1055; # int : nat : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDDDR;     # nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    DIG 4;      # @storage : nat : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : nat : nat : int : @parameter%executeNewRoundProposal
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : nat : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1055 # @some : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 1055; # int : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDDDR;     # nat : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    MUL;        # nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    SUB;        # int : int : @parameter%executeNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                    GT;         # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                        CADDDAR;    # nat : @storage : @parameter%executeNewRoundProposal
                        SWAP;       # @storage : nat : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%executeNewRoundProposal
                        CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : @parameter%executeNewRoundProposal
                        SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal
                        DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal : @storage
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal : @storage
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1055 # @some : nat : @parameter%executeNewRoundProposal : @storage
                          }
                          {
                            PUSH int 1055; # int : nat : @parameter%executeNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%executeNewRoundProposal : @storage
                        CDDADR;     # map address nat : nat : @parameter%executeNewRoundProposal : @storage
                        SIZE;       # nat : nat : @parameter%executeNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                        GE;         # bool : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%executeNewRoundProposal : @storage
                      }; # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%executeNewRoundProposal
                        # self.data.newRoundProposals[self.data.newRoundProposalId].resolved = 1 # @storage : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                        DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # bool : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DIG 8;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 1063; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CADR;       # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PUSH int 1; # int : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%executeNewRoundProposal
                        SWAP;       # @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        SWAP;       # @storage : @parameter%executeNewRoundProposal
                        # self.data.newRoundProposals[self.data.newRoundProposalId].resolved = -1 # @storage : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                        DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # bool : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal : @storage
                        DIG 8;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 1065; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        CADR;       # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PUSH int -1; # int : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%executeNewRoundProposal
                        SWAP;       # @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    # for voter in self.data.newRoundProposals[self.data.newRoundProposalId].voters.keys(): ... # @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    NIL operation; # list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%executeNewRoundProposal
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%executeNewRoundProposal
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%executeNewRoundProposal
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal
                    DUG 4;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    IF_SOME
                      {
                        # of_some: Get-item:1055 # @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        PUSH int 1055; # int : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDDADR;     # map address nat : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    ITER
                      {
                        CAR;        # address : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        # sp.transfer(sp.record(from_ = sp.to_address(sp.self), to_ = voter, value = self.data.newRoundProposals[self.data.newRoundProposalId].voters[voter]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%executeNewRoundProposal
                        DUG 4;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDADR;     # option address : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 1076; # int : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PUSH mutez 0; # mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 5;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        DUG 7;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {
                            # of_some: Get-item:1055 # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }
                          {
                            PUSH int 1055; # int : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDADR;     # map address nat : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # address : map address nat : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # address : address : map address nat : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUG 5;      # address : map address nat : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        GET;        # option nat : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {
                            # of_some: Get-item:1073 # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }
                          {
                            PUSH int 1073; # int : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # address : @some : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %to_ %value; # pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        ADDRESS;    # address : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (@some %value)) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONS;       # list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # list operation : @parameter%executeNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # @parameter%executeNewRoundProposal : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DROP;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    # self.data.newRoundProposalActive = False # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDDR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PUSH bool False; # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%executeTokenMintProposal
                    # == executeTokenMintProposal ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : @parameter%executeTokenMintProposal
                    DUG 2;      # @storage : @parameter%executeTokenMintProposal : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%executeTokenMintProposal : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%executeTokenMintProposal : @storage
                    MEM;        # bool : @parameter%executeTokenMintProposal : @storage
                    IF
                      {
                        PUSH nat 0; # nat : @parameter%executeTokenMintProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : nat : @parameter%executeTokenMintProposal
                        DUG 3;      # @storage : nat : @parameter%executeTokenMintProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeTokenMintProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeTokenMintProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:872 # @some : nat : @parameter%executeTokenMintProposal : @storage
                          }
                          {
                            PUSH int 872; # int : nat : @parameter%executeTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%executeTokenMintProposal : @storage
                        CDR;        # nat : nat : @parameter%executeTokenMintProposal : @storage
                        COMPARE;    # int : @parameter%executeTokenMintProposal : @storage
                        GT;         # bool : @parameter%executeTokenMintProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%executeTokenMintProposal : @storage
                      }; # bool : @parameter%executeTokenMintProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeTokenMintProposal : @storage
                    SWAP;       # @storage : @parameter%executeTokenMintProposal
                    # sp.verify(self.data.tokenMintProposalActive) # @storage : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : @parameter%executeTokenMintProposal
                    DUG 2;      # @storage : @parameter%executeTokenMintProposal : @storage
                    CDDDAR;     # bool : @parameter%executeTokenMintProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.tokenMintProposalActive"; # string : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeTokenMintProposal : @storage
                    SWAP;       # @storage : @parameter%executeTokenMintProposal
                    # sp.verify(sp.now > self.data.tokenMintProposals[self.data.tokenMintProposalId].expiry) # @storage : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : @parameter%executeTokenMintProposal
                    CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : @parameter%executeTokenMintProposal
                    SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%executeTokenMintProposal
                    DUG 3;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%executeTokenMintProposal : @storage
                    CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%executeTokenMintProposal : @storage
                    GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%executeTokenMintProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:879 # @some : @parameter%executeTokenMintProposal : @storage
                      }
                      {
                        PUSH int 879; # int : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%executeTokenMintProposal : @storage
                    CADDR;      # timestamp : @parameter%executeTokenMintProposal : @storage
                    NOW;        # timestamp : timestamp : @parameter%executeTokenMintProposal : @storage
                    COMPARE;    # int : @parameter%executeTokenMintProposal : @storage
                    GT;         # bool : @parameter%executeTokenMintProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now > self.data.tokenMintProposals[self.data.tokenMintProposalId].expiry"; # string : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeTokenMintProposal : @storage
                    # sp.verify(self.data.tokenMintProposals[self.data.tokenMintProposalId].resolved == 0) # @parameter%executeTokenMintProposal : @storage
                    PUSH int 0; # int : @parameter%executeTokenMintProposal : @storage
                    DIG 2;      # @storage : int : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : int : @parameter%executeTokenMintProposal
                    CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : int : @parameter%executeTokenMintProposal
                    SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal
                    DUG 4;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal : @storage
                    CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal : @storage
                    GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:879 # @some : int : @parameter%executeTokenMintProposal : @storage
                      }
                      {
                        PUSH int 879; # int : int : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%executeTokenMintProposal : @storage
                    CDAAR;      # int : int : @parameter%executeTokenMintProposal : @storage
                    COMPARE;    # int : @parameter%executeTokenMintProposal : @storage
                    EQ;         # bool : @parameter%executeTokenMintProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.tokenMintProposals[self.data.tokenMintProposalId].resolved == 0"; # string : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeTokenMintProposal : @storage
                    SWAP;       # @storage : @parameter%executeTokenMintProposal
                    # if ((self.data.tokenMintProposals[self.data.tokenMintProposalId].votesYes - self.data.tokenMintProposals[self.data.tokenMintProposalId].votesNo) > self.data.minimumVoteDifference) & (sp.len(self.data.tokenMintProposals[self.data.tokenMintProposalId].voters) >= self.data.minTokenMintProposalVotes): # @storage : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : @parameter%executeTokenMintProposal
                    CDAADR;     # int : @storage : @parameter%executeTokenMintProposal
                    SWAP;       # @storage : int : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : int : @parameter%executeTokenMintProposal
                    CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : int : @parameter%executeTokenMintProposal
                    SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal
                    DUG 4;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal : @storage
                    CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal : @storage
                    GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%executeTokenMintProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:879 # @some : int : @parameter%executeTokenMintProposal : @storage
                      }
                      {
                        PUSH int 879; # int : int : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%executeTokenMintProposal : @storage
                    CDDAR;      # nat : int : @parameter%executeTokenMintProposal : @storage
                    DIG 3;      # @storage : nat : int : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : nat : int : @parameter%executeTokenMintProposal
                    CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : nat : int : @parameter%executeTokenMintProposal
                    SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : int : @parameter%executeTokenMintProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : int : @parameter%executeTokenMintProposal
                    DUG 5;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : int : @parameter%executeTokenMintProposal : @storage
                    CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : int : @parameter%executeTokenMintProposal : @storage
                    GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : int : @parameter%executeTokenMintProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:879 # @some : nat : int : @parameter%executeTokenMintProposal : @storage
                      }
                      {
                        PUSH int 879; # int : nat : int : @parameter%executeTokenMintProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : int : @parameter%executeTokenMintProposal : @storage
                    CDDDR;      # nat : nat : int : @parameter%executeTokenMintProposal : @storage
                    SUB;        # int : int : @parameter%executeTokenMintProposal : @storage
                    COMPARE;    # int : @parameter%executeTokenMintProposal : @storage
                    GT;         # bool : @parameter%executeTokenMintProposal : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%executeTokenMintProposal
                        CDAAAR;     # nat : @storage : @parameter%executeTokenMintProposal
                        SWAP;       # @storage : nat : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : nat : @parameter%executeTokenMintProposal
                        CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : nat : @parameter%executeTokenMintProposal
                        SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%executeTokenMintProposal
                        DUG 4;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%executeTokenMintProposal : @storage
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%executeTokenMintProposal : @storage
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%executeTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:879 # @some : nat : @parameter%executeTokenMintProposal : @storage
                          }
                          {
                            PUSH int 879; # int : nat : @parameter%executeTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%executeTokenMintProposal : @storage
                        CDADR;      # map address nat : nat : @parameter%executeTokenMintProposal : @storage
                        SIZE;       # nat : nat : @parameter%executeTokenMintProposal : @storage
                        COMPARE;    # int : @parameter%executeTokenMintProposal : @storage
                        GE;         # bool : @parameter%executeTokenMintProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%executeTokenMintProposal : @storage
                      }; # bool : @parameter%executeTokenMintProposal : @storage
                    IF
                      {
                        # sp.transfer(sp.record(address = self.data.admin, value = self.data.tokenMintProposals[self.data.tokenMintProposalId].amount), sp.tez(0), sp.contract(sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), self.data.token.open_some(), entry_point='mint').open_some()) # @parameter%executeTokenMintProposal : @storage
                        NIL operation; # list operation : @parameter%executeTokenMintProposal : @storage
                        DIG 2;      # @storage : list operation : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : list operation : @parameter%executeTokenMintProposal
                        DUG 3;      # @storage : list operation : @parameter%executeTokenMintProposal : @storage
                        CDDADR;     # option address : list operation : @parameter%executeTokenMintProposal : @storage
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : @parameter%executeTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%executeTokenMintProposal : @storage
                        CONTRACT %mint (pair (address %address) (nat %value)); # option (contract (pair (address %address) (nat %value))) : list operation : @parameter%executeTokenMintProposal : @storage
                        IF_SOME
                          {}
                          {
                            PUSH int 893; # int : list operation : @parameter%executeTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%executeTokenMintProposal : @storage
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        DIG 4;      # @storage : mutez : @some : list operation : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : mutez : @some : list operation : @parameter%executeTokenMintProposal
                        CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : mutez : @some : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : @parameter%executeTokenMintProposal
                        DUG 6;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:879 # @some : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                          }
                          {
                            PUSH int 879; # int : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        CAAR;       # nat : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        DIG 5;      # @storage : nat : mutez : @some : list operation : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : nat : mutez : @some : list operation : @parameter%executeTokenMintProposal
                        DUG 6;      # @storage : nat : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        CAAAAR;     # address : nat : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        PAIR %address %value; # pair (address %address) (nat %value) : mutez : @some : list operation : @parameter%executeTokenMintProposal : @storage
                        TRANSFER_TOKENS; # operation : list operation : @parameter%executeTokenMintProposal : @storage
                        CONS;       # list operation : @parameter%executeTokenMintProposal : @storage
                        # self.data.tokenMintProposals[self.data.tokenMintProposalId].resolved = 1 # list operation : @parameter%executeTokenMintProposal : @storage
                        DIG 2;      # @storage : list operation : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : list operation : @parameter%executeTokenMintProposal
                        DUG 3;      # @storage : list operation : @parameter%executeTokenMintProposal : @storage
                        DUP;        # @storage : @storage : list operation : @parameter%executeTokenMintProposal : @storage
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : list operation : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CAR;        # bool : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CAR;        # nat : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        CDR;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        DUP;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal : @storage
                        DIG 9;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        DUG 2;      # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 902; # int : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        CAR;        # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # @some : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        CDR;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        DUP;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        CADR;       # map address nat : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PUSH int 1; # int : map address nat : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair int (map address nat) : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SOME;       # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # nat : option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        UPDATE;     # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @parameter%executeTokenMintProposal
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%executeTokenMintProposal
                        DUG 2;      # list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        SWAP;       # @storage : @parameter%executeTokenMintProposal
                        # self.data.tokenMintProposals[self.data.tokenMintProposalId].resolved = -1 # @storage : @parameter%executeTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%executeTokenMintProposal
                        DUG 2;      # @storage : @parameter%executeTokenMintProposal : @storage
                        DUP;        # @storage : @storage : @parameter%executeTokenMintProposal : @storage
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CAR;        # bool : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CDR;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        DUP;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CAR;        # nat : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        SWAP;       # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        CDR;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        DUP;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal : @storage
                        DIG 8;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        DUG 2;      # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 904; # int : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        CAR;        # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # @some : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        CDR;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        DUP;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        CADR;       # map address nat : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PUSH int -1; # int : map address nat : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair int (map address nat) : pair (nat %votesNo) (nat %votesYes) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SOME;       # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # nat : option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        UPDATE;     # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%executeTokenMintProposal
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%executeTokenMintProposal
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%executeTokenMintProposal
                        SWAP;       # @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        NIL operation; # list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    # for voter in self.data.tokenMintProposals[self.data.tokenMintProposalId].voters.keys(): ... # list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%executeTokenMintProposal
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%executeTokenMintProposal
                    CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%executeTokenMintProposal
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%executeTokenMintProposal
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%executeTokenMintProposal
                    DUG 4;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    IF_SOME
                      {
                        # of_some: Get-item:879 # @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        PUSH int 879; # int : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDADR;      # map address nat : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    ITER
                      {
                        CAR;        # address : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        # sp.transfer(sp.record(from_ = sp.to_address(sp.self), to_ = voter, value = self.data.tokenMintProposals[self.data.tokenMintProposalId].voters[voter]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%executeTokenMintProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%executeTokenMintProposal
                        DUG 4;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDADR;     # option address : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 915; # int : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PUSH mutez 0; # mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 5;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal
                        CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal
                        DUG 7;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {
                            # of_some: Get-item:879 # @some : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }
                          {
                            PUSH int 879; # int : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDADR;      # map address nat : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # address : map address nat : mutez : @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # address : address : map address nat : mutez : @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUG 5;      # address : map address nat : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        GET;        # option nat : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {
                            # of_some: Get-item:912 # @some : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }
                          {
                            PUSH int 912; # int : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # address : @some : mutez : @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %to_ %value; # pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        ADDRESS;    # address : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (@some %value)) : mutez : @some : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONS;       # list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # list operation : @parameter%executeTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # @parameter%executeTokenMintProposal : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DROP;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    # self.data.tokenMintProposalActive = False # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDDR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PUSH bool False; # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%initialMint
                    # == initialMint ==
                    # sp.verify((sp.sender == self.data.admin) & (~ self.data.token.is_some())) # @storage : @parameter%initialMint
                    DUP;        # @storage : @storage : @parameter%initialMint
                    DUG 2;      # @storage : @parameter%initialMint : @storage
                    CAAAAR;     # address : @parameter%initialMint : @storage
                    SENDER;     # address : address : @parameter%initialMint : @storage
                    COMPARE;    # int : @parameter%initialMint : @storage
                    EQ;         # bool : @parameter%initialMint : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%initialMint
                        DUP;        # @storage : @storage : @parameter%initialMint
                        DUG 2;      # @storage : @parameter%initialMint : @storage
                        CDDADR;     # option address : @parameter%initialMint : @storage
                        IF_SOME
                          {
                            DROP;       # @parameter%initialMint : @storage
                            PUSH bool True; # bool : @parameter%initialMint : @storage
                          }
                          {
                            PUSH bool False; # bool : @parameter%initialMint : @storage
                          }; # bool : @parameter%initialMint : @storage
                        NOT;        # bool : @parameter%initialMint : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%initialMint : @storage
                      }; # bool : @parameter%initialMint : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (sp.sender == self.data.admin) & (~ self.data.token.is_some())"; # string : @parameter%initialMint : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%initialMint : @storage
                    SWAP;       # @storage : @parameter%initialMint
                    # sp.verify(sp.sender == self.data.admin) # @storage : @parameter%initialMint
                    DUP;        # @storage : @storage : @parameter%initialMint
                    DUG 2;      # @storage : @parameter%initialMint : @storage
                    CAAAAR;     # address : @parameter%initialMint : @storage
                    SENDER;     # address : address : @parameter%initialMint : @storage
                    COMPARE;    # int : @parameter%initialMint : @storage
                    EQ;         # bool : @parameter%initialMint : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%initialMint : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%initialMint : @storage
                    SWAP;       # @storage : @parameter%initialMint
                    # sp.verify(~ self.data.token.is_some()) # @storage : @parameter%initialMint
                    DUP;        # @storage : @storage : @parameter%initialMint
                    DUG 2;      # @storage : @parameter%initialMint : @storage
                    CDDADR;     # option address : @parameter%initialMint : @storage
                    IF_SOME
                      {
                        PUSH string "WrongCondition: ~ self.data.token.is_some()"; # string : @some : @parameter%initialMint : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%initialMint : @storage
                    SWAP;       # @storage : @parameter%initialMint
                    # self.data.token = sp.some(params._token) # @storage : @parameter%initialMint
                    DUP;        # @storage : @storage : @parameter%initialMint
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%initialMint
                    SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    CDR;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    CAAR;       # option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    DIG 4;      # @parameter%initialMint : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUP;        # @parameter%initialMint : @parameter%initialMint : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    DUG 5;      # @parameter%initialMint : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    CDAR;       # address : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    SOME;       # option address : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    SWAP;       # option address : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    PAIR;       # pair (option address) (option address) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    PAIR;       # pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%initialMint
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%initialMint
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%initialMint
                    SWAP;       # @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    # for member in params._members: ... # @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # @parameter%initialMint : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # list address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    NIL operation; # list operation : list address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # list address : list operation : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    ITER
                      {
                        SWAP;       # list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        # sp.transfer(sp.record(address = member, value = params.value), sp.tez(0), sp.contract(sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), self.data.token.open_some(), entry_point='mint').open_some()) # list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%initialMint
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%initialMint
                        DUG 4;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDADR;     # option address : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONTRACT %mint (pair (address %address) (nat %value)); # option (contract (pair (address %address) (nat %value))) : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 756; # int : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PUSH mutez 0; # mutez : @some : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # @parameter%initialMint : mutez : @some : list operation : address : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # @parameter%initialMint : @parameter%initialMint : mutez : @some : list operation : address : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUG 5;      # @parameter%initialMint : mutez : @some : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDR;       # nat : mutez : @some : list operation : address : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # address : nat : mutez : @some : list operation : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %address %value; # pair (address %address) (nat %value) : mutez : @some : list operation : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONS;       # list operation : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # list operation : @parameter%initialMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # @parameter%initialMint : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DROP;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }
              {
                IF_LEFT
                  {
                    DROP;       # @storage
                    # == listNewRound ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage
                    DUP;        # @storage : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    MEM;        # bool : @storage
                    IF
                      {
                        DUP;        # @storage : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        PUSH nat 0; # nat : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1137 # @some : nat : @storage
                          }
                          {
                            PUSH int 1137; # int : nat : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @storage
                        CDR;        # nat : nat : @storage
                        COMPARE;    # int : @storage
                        GT;         # bool : @storage
                      }
                      {
                        PUSH bool False; # bool : @storage
                      }; # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(self.data.currentOnGoingRoundProposalId == -1) # @storage
                    DUP;        # @storage : @storage
                    CAAADR;     # int : @storage
                    PUSH int -1; # int : int : @storage
                    COMPARE;    # int : @storage
                    EQ;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.currentOnGoingRoundProposalId == -1"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1) # @storage
                    PUSH int 1; # int : @storage
                    SWAP;       # @storage : int
                    DUP;        # @storage : @storage : int
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1144 # @some : int : @storage
                      }
                      {
                        PUSH int 1144; # int : int : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @storage
                    CDAAR;      # int : int : @storage
                    COMPARE;    # int : @storage
                    EQ;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(~ self.data.newRoundProposals[self.data.newRoundProposalId].listed) # @storage
                    DUP;        # @storage : @storage
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUG 2;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1144 # @some : @storage
                      }
                      {
                        PUSH int 1144; # int : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @storage
                    CADDAR;     # bool : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ self.data.newRoundProposals[self.data.newRoundProposalId].listed"; # string : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @storage
                    # sp.transfer(sp.record(end = self.data.newRoundProposals[self.data.newRoundProposalId].end, name = self.data.newRoundProposals[self.data.newRoundProposalId].name, sponsors = self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds, start = self.data.newRoundProposals[self.data.newRoundProposalId].start, totalSponsorship = self.data.newRoundProposals[self.data.newRoundProposalId].totalFunds), sp.tez(0), sp.contract(sp.TRecord(end = sp.TTimestamp, name = sp.TString, sponsors = sp.TMap(sp.TAddress, sp.TRecord(amount = sp.TMutez, name = sp.TString).layout(("amount", "name"))), start = sp.TTimestamp, totalSponsorship = sp.TMutez).layout((("end", "name"), ("sponsors", ("start", "totalSponsorship")))), self.data.roundManager.open_some(), entry_point='createNewRound').open_some()) # @storage
                    DUP;        # @storage : @storage
                    CDDAAR;     # option address : @storage
                    NIL operation; # list operation : option address : @storage
                    SWAP;       # option address : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1176; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    CONTRACT %createNewRound (pair (pair (timestamp %end) (string %name)) (pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)))); # option (contract (pair (pair (timestamp %end) (string %name)) (pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship))))) : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1162; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @storage
                    DIG 3;      # @storage : mutez : @some : list operation
                    DUP;        # @storage : @storage : mutez : @some : list operation
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation
                    DUG 5;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1144 # @some : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 1144; # int : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : @some : list operation : @storage
                    CDDAAR;     # mutez : mutez : @some : list operation : @storage
                    DIG 4;      # @storage : mutez : mutez : @some : list operation
                    DUP;        # @storage : @storage : mutez : mutez : @some : list operation
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : mutez : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1144 # @some : mutez : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 1144; # int : mutez : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : mutez : @some : list operation : @storage
                    CDADDR;     # timestamp : mutez : mutez : @some : list operation : @storage
                    PAIR %start %totalSponsorship; # pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    DIG 4;      # @storage : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    DUP;        # @storage : @storage : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1144 # @some : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 1144; # int : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    CDADAR;     # map address (pair (mutez %amount) (string %name)) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    PAIR %sponsors; # pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    DIG 4;      # @storage : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1144 # @some : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 1144; # int : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CADDDR;     # string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    DIG 5;      # @storage : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUG 7;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1144 # @some : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 1144; # int : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CAADDR;     # timestamp : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    PAIR %end %name; # pair (timestamp %end) (string %name) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    PAIR;       # pair (pair (timestamp %end) (string %name)) (pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship))) : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                    SWAP;       # @storage : list operation
                    # self.data.newRoundProposals[self.data.newRoundProposalId].listed = True # @storage : list operation
                    DUP;        # @storage : @storage : list operation
                    DUG 2;      # @storage : list operation : @storage
                    DUP;        # @storage : @storage : list operation : @storage
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : list operation : @storage
                    SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CDR;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    DUP;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CAR;        # bool : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    SWAP;       # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CDR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation : @storage
                    DIG 8;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    IF_SOME
                      {}
                      {
                        PUSH int 1182; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                        FAILWITH;   # FAILED
                      }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # @some : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # timestamp : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDDR;       # string : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PUSH bool True; # bool : string : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair bool string : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # timestamp : pair bool string : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair timestamp (pair bool string) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair timestamp (pair bool string) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    # self.data.newRoundProposalActive = False # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    CDDR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PUSH bool False; # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : list operation
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    # self.data.currentOnGoingRoundProposalId = sp.to_int(self.data.newRoundProposalId) # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    DUG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDR;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAAR;       # address : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 5;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : address : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CDADDAR;    # nat : address : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    INT;        # int : address : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # address : int : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair address int : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    # self.data.disputes = {} # pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    DUP;        # pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CAR;        # pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    DUP;        # pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CAR;        # pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    DUP;        # pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CAR;        # pair address int : pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair address int : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CDAR;       # nat : pair address int : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    EMPTY_MAP nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))); # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair address int : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair address int : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair address int : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # pair address int : pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair address int) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair address int) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair address int) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # list operation : pair (pair (pair (pair address int) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    IF_LEFT
                      {
                        SWAP;       # @storage : @parameter%proposeNewRound
                        # == proposeNewRound ==
                        # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%proposeNewRound
                        DUP;        # @storage : @storage : @parameter%proposeNewRound
                        DUG 2;      # @storage : @parameter%proposeNewRound : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%proposeNewRound : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%proposeNewRound : @storage
                        MEM;        # bool : @parameter%proposeNewRound : @storage
                        IF
                          {
                            PUSH nat 0; # nat : @parameter%proposeNewRound : @storage
                            DIG 2;      # @storage : nat : @parameter%proposeNewRound
                            DUP;        # @storage : @storage : nat : @parameter%proposeNewRound
                            DUG 3;      # @storage : nat : @parameter%proposeNewRound : @storage
                            CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeNewRound : @storage
                            SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeNewRound : @storage
                            GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeNewRound : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:964 # @some : nat : @parameter%proposeNewRound : @storage
                              }
                              {
                                PUSH int 964; # int : nat : @parameter%proposeNewRound : @storage
                                FAILWITH;   # FAILED
                              }; # @some : nat : @parameter%proposeNewRound : @storage
                            CDR;        # nat : nat : @parameter%proposeNewRound : @storage
                            COMPARE;    # int : @parameter%proposeNewRound : @storage
                            GT;         # bool : @parameter%proposeNewRound : @storage
                          }
                          {
                            PUSH bool False; # bool : @parameter%proposeNewRound : @storage
                          }; # bool : @parameter%proposeNewRound : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%proposeNewRound : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%proposeNewRound : @storage
                        SWAP;       # @storage : @parameter%proposeNewRound
                        # sp.verify(~ self.data.newRoundProposalActive) # @storage : @parameter%proposeNewRound
                        DUP;        # @storage : @storage : @parameter%proposeNewRound
                        DUG 2;      # @storage : @parameter%proposeNewRound : @storage
                        CDADAR;     # bool : @parameter%proposeNewRound : @storage
                        IF
                          {
                            PUSH string "WrongCondition: ~ self.data.newRoundProposalActive"; # string : @parameter%proposeNewRound : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @parameter%proposeNewRound : @storage
                        # sp.verify(params.endTime > params.startTime) # @parameter%proposeNewRound : @storage
                        DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : @storage
                        CDDR;       # timestamp : @parameter%proposeNewRound : @storage
                        SWAP;       # @parameter%proposeNewRound : timestamp : @storage
                        DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : timestamp : @storage
                        DUG 2;      # @parameter%proposeNewRound : timestamp : @parameter%proposeNewRound : @storage
                        CAAR;       # timestamp : timestamp : @parameter%proposeNewRound : @storage
                        COMPARE;    # int : @parameter%proposeNewRound : @storage
                        GT;         # bool : @parameter%proposeNewRound : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: params.endTime > params.startTime"; # string : @parameter%proposeNewRound : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%proposeNewRound : @storage
                        # sp.verify(params.startTime > params.expiry) # @parameter%proposeNewRound : @storage
                        DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : @storage
                        CADR;       # timestamp : @parameter%proposeNewRound : @storage
                        SWAP;       # @parameter%proposeNewRound : timestamp : @storage
                        DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : timestamp : @storage
                        DUG 2;      # @parameter%proposeNewRound : timestamp : @parameter%proposeNewRound : @storage
                        CDDR;       # timestamp : timestamp : @parameter%proposeNewRound : @storage
                        COMPARE;    # int : @parameter%proposeNewRound : @storage
                        GT;         # bool : @parameter%proposeNewRound : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: params.startTime > params.expiry"; # string : @parameter%proposeNewRound : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%proposeNewRound : @storage
                        SWAP;       # @storage : @parameter%proposeNewRound
                        # self.data.newRoundProposalId += 1 # @storage : @parameter%proposeNewRound
                        DUP;        # @storage : @storage : @parameter%proposeNewRound
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%proposeNewRound
                        SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDR;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DUP;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CAR;        # bool : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        SWAP;       # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CAR;        # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PUSH nat 1; # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        ADD;        # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%proposeNewRound
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeNewRound
                        # self.data.newRoundProposals[self.data.newRoundProposalId] = sp.record(created = sp.now, creator = sp.sender, end = params.endTime, expiry = params.expiry, listed = False, name = params.name, resolved = 0, sponsorToFunds = {}, start = params.startTime, totalFunds = sp.tez(0), voters = {}, votesNo = 0, votesYes = 0) # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeNewRound
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeNewRound
                        DUG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # bool : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # nat : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 7;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PUSH (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) (Pair (Pair 0 {}) (Pair 0 0)); # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DIG 8;      # @parameter%proposeNewRound : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUG 9;      # @parameter%proposeNewRound : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDDR;       # timestamp : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        EMPTY_MAP address (pair (mutez %amount) (string %name)); # map address (pair (mutez %amount) (string %name)) : timestamp : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR %sponsorToFunds %start; # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PUSH int 0; # int : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR %resolved; # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DIG 8;      # @parameter%proposeNewRound : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUG 9;      # @parameter%proposeNewRound : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CDAR;       # string : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PUSH bool False; # bool : string : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR %listed %name; # pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DIG 9;      # @parameter%proposeNewRound : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUG 10;     # @parameter%proposeNewRound : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        CADR;       # timestamp : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        PAIR %expiry; # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeNewRound
                        DIG 9;      # @parameter%proposeNewRound : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CAAR;       # timestamp : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SENDER;     # address : timestamp : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR %creator %end; # pair (address %creator) (timestamp %end) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        NOW;        # timestamp : pair (address %creator) (timestamp %end) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR %created; # pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        # self.data.newRoundProposalActive = True # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CDDR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PUSH bool True; # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        SWAP;       # @storage : @parameter%proposeTokenMint
                        # == proposeTokenMint ==
                        # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%proposeTokenMint
                        DUP;        # @storage : @storage : @parameter%proposeTokenMint
                        DUG 2;      # @storage : @parameter%proposeTokenMint : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%proposeTokenMint : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%proposeTokenMint : @storage
                        MEM;        # bool : @parameter%proposeTokenMint : @storage
                        IF
                          {
                            PUSH nat 0; # nat : @parameter%proposeTokenMint : @storage
                            DIG 2;      # @storage : nat : @parameter%proposeTokenMint
                            DUP;        # @storage : @storage : nat : @parameter%proposeTokenMint
                            DUG 3;      # @storage : nat : @parameter%proposeTokenMint : @storage
                            CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeTokenMint : @storage
                            SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeTokenMint : @storage
                            GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeTokenMint : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:797 # @some : nat : @parameter%proposeTokenMint : @storage
                              }
                              {
                                PUSH int 797; # int : nat : @parameter%proposeTokenMint : @storage
                                FAILWITH;   # FAILED
                              }; # @some : nat : @parameter%proposeTokenMint : @storage
                            CDR;        # nat : nat : @parameter%proposeTokenMint : @storage
                            COMPARE;    # int : @parameter%proposeTokenMint : @storage
                            GT;         # bool : @parameter%proposeTokenMint : @storage
                          }
                          {
                            PUSH bool False; # bool : @parameter%proposeTokenMint : @storage
                          }; # bool : @parameter%proposeTokenMint : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%proposeTokenMint : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%proposeTokenMint : @storage
                        SWAP;       # @storage : @parameter%proposeTokenMint
                        # sp.verify(~ self.data.tokenMintProposalActive) # @storage : @parameter%proposeTokenMint
                        DUP;        # @storage : @storage : @parameter%proposeTokenMint
                        DUG 2;      # @storage : @parameter%proposeTokenMint : @storage
                        CDDDAR;     # bool : @parameter%proposeTokenMint : @storage
                        IF
                          {
                            PUSH string "WrongCondition: ~ self.data.tokenMintProposalActive"; # string : @parameter%proposeTokenMint : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @parameter%proposeTokenMint : @storage
                        SWAP;       # @storage : @parameter%proposeTokenMint
                        # self.data.tokenMintProposalId += 1 # @storage : @parameter%proposeTokenMint
                        DUP;        # @storage : @storage : @parameter%proposeTokenMint
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%proposeTokenMint
                        SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CDR;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        DUP;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CAR;        # bool : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CDR;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        DUP;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CDR;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CAR;        # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        PUSH nat 1; # nat : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        ADD;        # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        PAIR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%proposeTokenMint
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeTokenMint
                        # self.data.tokenMintProposals[self.data.tokenMintProposalId] = sp.record(amount = params.mintAmount, creator = sp.sender, expiry = params.expiry, resolved = 0, voters = {}, votesNo = 0, votesYes = 0) # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeTokenMint
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeTokenMint
                        DUG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # bool : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # nat : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 7;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        PUSH (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) (Pair (Pair 0 {}) (Pair 0 0)); # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        DIG 8;      # @parameter%proposeTokenMint : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # @parameter%proposeTokenMint : @parameter%proposeTokenMint : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUG 9;      # @parameter%proposeTokenMint : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        CAR;        # timestamp : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        SENDER;     # address : timestamp : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        PAIR %creator %expiry; # pair (address %creator) (timestamp %expiry) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%proposeTokenMint
                        DIG 9;      # @parameter%proposeTokenMint : pair (address %creator) (timestamp %expiry) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CDR;        # nat : pair (address %creator) (timestamp %expiry) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR %amount; # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SOME;       # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # nat : option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        UPDATE;     # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        # self.data.tokenMintProposalActive = True # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        CDDR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PUSH bool True; # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    NIL operation; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # list operation : pair (pair (pair (pair address int) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
          }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%raiseDispute
                    # == raiseDispute ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > self.data.disputeFee)) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    DUG 2;      # @storage : @parameter%raiseDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    MEM;        # bool : @parameter%raiseDispute : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%raiseDispute
                        DUP;        # @storage : @storage : @parameter%raiseDispute
                        CAADAR;     # nat : @storage : @parameter%raiseDispute
                        SWAP;       # @storage : nat : @parameter%raiseDispute
                        DUP;        # @storage : @storage : nat : @parameter%raiseDispute
                        DUG 3;      # @storage : nat : @parameter%raiseDispute : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1253 # @some : nat : @parameter%raiseDispute : @storage
                          }
                          {
                            PUSH int 1253; # int : nat : @parameter%raiseDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%raiseDispute : @storage
                        CDR;        # nat : nat : @parameter%raiseDispute : @storage
                        COMPARE;    # int : @parameter%raiseDispute : @storage
                        GT;         # bool : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%raiseDispute : @storage
                      }; # bool : @parameter%raiseDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > self.data.disputeFee)"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%raiseDispute : @storage
                    SWAP;       # @storage : @parameter%raiseDispute
                    # sp.verify(~ (self.data.disputes.contains(params.entryId))) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    DUG 2;      # @storage : @parameter%raiseDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%raiseDispute : @storage
                    SWAP;       # @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%raiseDispute : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%raiseDispute : @storage
                    MEM;        # bool : @parameter%raiseDispute : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ (self.data.disputes.contains(params.entryId))"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%raiseDispute : @storage
                    SWAP;       # @storage : @parameter%raiseDispute
                    # sp.verify(self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    DUG 2;      # @storage : @parameter%raiseDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1260 # @some : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH int 1260; # int : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%raiseDispute : @storage
                    CAR;        # map address nat : @parameter%raiseDispute : @storage
                    SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : @parameter%raiseDispute : @storage
                    ADDRESS;    # address : map address nat : @parameter%raiseDispute : @storage
                    MEM;        # bool : @parameter%raiseDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%raiseDispute : @storage
                    SWAP;       # @storage : @parameter%raiseDispute
                    # sp.verify(self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= self.data.disputeFee) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    CAADAR;     # nat : @storage : @parameter%raiseDispute
                    SWAP;       # @storage : nat : @parameter%raiseDispute
                    DUP;        # @storage : @storage : nat : @parameter%raiseDispute
                    DUG 3;      # @storage : nat : @parameter%raiseDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1262 # @some : nat : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH int 1262; # int : nat : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%raiseDispute : @storage
                    CAR;        # map address nat : nat : @parameter%raiseDispute : @storage
                    SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : nat : @parameter%raiseDispute : @storage
                    ADDRESS;    # address : map address nat : nat : @parameter%raiseDispute : @storage
                    GET;        # option nat : nat : @parameter%raiseDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1262 # @some : nat : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH int 1262; # int : nat : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%raiseDispute : @storage
                    COMPARE;    # int : @parameter%raiseDispute : @storage
                    GE;         # bool : @parameter%raiseDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= self.data.disputeFee"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%raiseDispute : @storage
                    # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.to_address(sp.self), value = self.data.disputeFee), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # @parameter%raiseDispute : @storage
                    NIL operation; # list operation : @parameter%raiseDispute : @storage
                    DIG 2;      # @storage : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : list operation : @parameter%raiseDispute
                    DUG 3;      # @storage : list operation : @parameter%raiseDispute : @storage
                    CDDADR;     # option address : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 558; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1267; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%raiseDispute : @storage
                    DIG 4;      # @storage : mutez : @some : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : mutez : @some : list operation : @parameter%raiseDispute
                    DUG 5;      # @storage : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    CAADAR;     # nat : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : nat : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    ADDRESS;    # address : nat : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    SENDER;     # address : pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%raiseDispute : @storage
                    CONS;       # list operation : @parameter%raiseDispute : @storage
                    # sp.transfer(sp.record(entryId = params.entryId), sp.tez(0), sp.contract(sp.TRecord(entryId = sp.TNat).layout("entryId"), self.data.roundManager.open_some(), entry_point='dispute').open_some()) # list operation : @parameter%raiseDispute : @storage
                    DIG 2;      # @storage : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : list operation : @parameter%raiseDispute
                    DUG 3;      # @storage : list operation : @parameter%raiseDispute : @storage
                    CDDAAR;     # option address : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1176; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    CONTRACT %dispute nat; # option (contract nat) : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1293; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%raiseDispute : @storage
                    DIG 3;      # @parameter%raiseDispute : mutez : @some : list operation : @storage
                    DUP;        # @parameter%raiseDispute : @parameter%raiseDispute : mutez : @some : list operation : @storage
                    DUG 4;      # @parameter%raiseDispute : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%raiseDispute : @storage
                    CONS;       # list operation : @parameter%raiseDispute : @storage
                    # self.data.disputes[params.entryId] = sp.record(disputer = sp.sender, expiry = sp.add_seconds(sp.now, 500), resolved = 0, voters = {}, votesNo = 0, votesYes = 0) # list operation : @parameter%raiseDispute : @storage
                    DIG 2;      # @storage : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : list operation : @parameter%raiseDispute
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : list operation : @parameter%raiseDispute
                    SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    CAR;        # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    CDR;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    DUP;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    CAR;        # nat : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    SWAP;       # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    CDR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%raiseDispute
                    DIG 6;      # @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PUSH (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) (Pair {} (Pair 0 0)); # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PUSH int 0; # int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    NOW;        # timestamp : int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PUSH int 500; # int : timestamp : int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    ADD;        # timestamp : int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR %expiry %resolved; # pair (timestamp %expiry) (int %resolved) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SENDER;     # address : pair (timestamp %expiry) (int %resolved) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR %disputer; # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # @parameter%raiseDispute : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%removeTokens
                    # == removeTokens ==
                    # sp.verify(sp.sender == self.data.token.open_some()) # @storage : @parameter%removeTokens
                    DUP;        # @storage : @storage : @parameter%removeTokens
                    DUG 2;      # @storage : @parameter%removeTokens : @storage
                    CDDADR;     # option address : @parameter%removeTokens : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 558; # int : @parameter%removeTokens : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%removeTokens : @storage
                    SENDER;     # address : @some : @parameter%removeTokens : @storage
                    COMPARE;    # int : @parameter%removeTokens : @storage
                    EQ;         # bool : @parameter%removeTokens : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.token.open_some()"; # string : @parameter%removeTokens : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%removeTokens : @storage
                    SWAP;       # @storage : @parameter%removeTokens
                    # self.data.holders[params.address].balance = sp.as_nat(self.data.holders[params.address].balance - params.value) # @storage : @parameter%removeTokens
                    DUP;        # @storage : @storage : @parameter%removeTokens
                    DUG 2;      # @storage : @parameter%removeTokens : @storage
                    DUP;        # @storage : @storage : @parameter%removeTokens : @storage
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : @parameter%removeTokens : @storage
                    SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DUP;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CDR;        # pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    SWAP;       # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CAR;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DUP;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CDR;        # nat : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    SWAP;       # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DIG 6;      # @parameter%removeTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUP;        # @parameter%removeTokens : @parameter%removeTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUG 7;      # @parameter%removeTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 597; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CAR;        # map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DIG 7;      # @parameter%removeTokens : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUP;        # @parameter%removeTokens : @parameter%removeTokens : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage
                    DUG 8;      # @parameter%removeTokens : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    CDR;        # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens : @storage
                    DIG 9;      # @storage : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%removeTokens
                    DIG 9;      # @parameter%removeTokens : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    IF_SOME
                      {
                        # of_some: Get-item:598 # @some : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                      }
                      {
                        PUSH int 598; # int : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        FAILWITH;   # FAILED
                      }; # @some : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    CDR;        # nat : nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SUB;        # int : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    ISNAT;      # option nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    IF_SOME
                      {}
                      {
                        PUSH int 597; # int : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        FAILWITH;   # FAILED
                      }; # @some : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # map address nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (map address nat) @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SOME;       # option (pair (map address nat) @some) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # address : option (pair (map address nat) @some) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    NIL operation; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%setApproval
                    # == setApproval ==
                    # sp.verify(sp.sender == self.data.token.open_some()) # @storage : @parameter%setApproval
                    DUP;        # @storage : @storage : @parameter%setApproval
                    DUG 2;      # @storage : @parameter%setApproval : @storage
                    CDDADR;     # option address : @parameter%setApproval : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 558; # int : @parameter%setApproval : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%setApproval : @storage
                    SENDER;     # address : @some : @parameter%setApproval : @storage
                    COMPARE;    # int : @parameter%setApproval : @storage
                    EQ;         # bool : @parameter%setApproval : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.token.open_some()"; # string : @parameter%setApproval : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setApproval : @storage
                    SWAP;       # @storage : @parameter%setApproval
                    # self.data.holders[params.owner].approvals[params.address] = params.value # @storage : @parameter%setApproval
                    DUP;        # @storage : @storage : @parameter%setApproval
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : @parameter%setApproval
                    SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DUP;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CDR;        # pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    SWAP;       # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CAR;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DUP;        # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CDR;        # nat : pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    SWAP;       # pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CAR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DIG 6;      # @parameter%setApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUP;        # @parameter%setApproval : @parameter%setApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUG 7;      # @parameter%setApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CDAR;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    IF_SOME
                      {}
                      {
                        PUSH int 634; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DUP;        # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CDR;        # nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    SWAP;       # @some : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    CAR;        # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%setApproval
                    DIG 8;      # @parameter%setApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUP;        # @parameter%setApproval : @parameter%setApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    CAR;        # address : @parameter%setApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # @parameter%setApproval : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    CDDR;       # nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SOME;       # option nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # address : option nat : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    UPDATE;     # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (map address nat) nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (big_map address (pair (map address nat) nat)) nat : pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%setRoundManagerContract
                    # == setRoundManagerContract ==
                    # sp.verify(~ self.data.roundManager.is_some()) # @storage : @parameter%setRoundManagerContract
                    DUP;        # @storage : @storage : @parameter%setRoundManagerContract
                    DUG 2;      # @storage : @parameter%setRoundManagerContract : @storage
                    CDDAAR;     # option address : @parameter%setRoundManagerContract : @storage
                    IF_SOME
                      {
                        PUSH string "WrongCondition: ~ self.data.roundManager.is_some()"; # string : @some : @parameter%setRoundManagerContract : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%setRoundManagerContract : @storage
                    SWAP;       # @storage : @parameter%setRoundManagerContract
                    # sp.verify(sp.sender == self.data.admin) # @storage : @parameter%setRoundManagerContract
                    DUP;        # @storage : @storage : @parameter%setRoundManagerContract
                    DUG 2;      # @storage : @parameter%setRoundManagerContract : @storage
                    CAAAAR;     # address : @parameter%setRoundManagerContract : @storage
                    SENDER;     # address : address : @parameter%setRoundManagerContract : @storage
                    COMPARE;    # int : @parameter%setRoundManagerContract : @storage
                    EQ;         # bool : @parameter%setRoundManagerContract : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%setRoundManagerContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setRoundManagerContract : @storage
                    SWAP;       # @storage : @parameter%setRoundManagerContract
                    # self.data.roundManager = sp.some(params._roundManager) # @storage : @parameter%setRoundManagerContract
                    DUP;        # @storage : @storage : @parameter%setRoundManagerContract
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : @parameter%setRoundManagerContract
                    SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    CDR;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    CADR;       # option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%setRoundManagerContract
                    DIG 4;      # @parameter%setRoundManagerContract : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SOME;       # option address : option address : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (option address) (option address) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option address) (option address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                NIL operation; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%settleDispute
                    # == settleDispute ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%settleDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%settleDispute : @storage
                    MEM;        # bool : @parameter%settleDispute : @storage
                    IF
                      {
                        PUSH nat 0; # nat : @parameter%settleDispute : @storage
                        DIG 2;      # @storage : nat : @parameter%settleDispute
                        DUP;        # @storage : @storage : nat : @parameter%settleDispute
                        DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%settleDispute : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%settleDispute : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%settleDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1383 # @some : nat : @parameter%settleDispute : @storage
                          }
                          {
                            PUSH int 1383; # int : nat : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%settleDispute : @storage
                        CDR;        # nat : nat : @parameter%settleDispute : @storage
                        COMPARE;    # int : @parameter%settleDispute : @storage
                        GT;         # bool : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%settleDispute : @storage
                      }; # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    SWAP;       # @storage : @parameter%settleDispute
                    # sp.verify(self.data.disputes.contains(params.entryId)) # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    SWAP;       # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    MEM;        # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.disputes.contains(params.entryId)"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    SWAP;       # @storage : @parameter%settleDispute
                    # sp.verify(sp.now > self.data.disputes[params.entryId].expiry) # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    SWAP;       # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1388 # @some : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1388; # int : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%settleDispute : @storage
                    CADAR;      # timestamp : @parameter%settleDispute : @storage
                    NOW;        # timestamp : timestamp : @parameter%settleDispute : @storage
                    COMPARE;    # int : @parameter%settleDispute : @storage
                    GT;         # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now > self.data.disputes[params.entryId].expiry"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    # sp.verify(self.data.disputes[params.entryId].resolved == 0) # @parameter%settleDispute : @storage
                    PUSH int 0; # int : @parameter%settleDispute : @storage
                    DIG 2;      # @storage : int : @parameter%settleDispute
                    DUP;        # @storage : @storage : int : @parameter%settleDispute
                    DUG 3;      # @storage : int : @parameter%settleDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%settleDispute : @storage
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @storage
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1388 # @some : int : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1388; # int : int : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%settleDispute : @storage
                    CADDR;      # int : int : @parameter%settleDispute : @storage
                    COMPARE;    # int : @parameter%settleDispute : @storage
                    EQ;         # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.disputes[params.entryId].resolved == 0"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    SWAP;       # @storage : @parameter%settleDispute
                    # if ((self.data.disputes[params.entryId].votesYes * self.data.disputes[params.entryId].votesYes) > (self.data.disputes[params.entryId].votesNo * self.data.disputes[params.entryId].votesNo)) & ((self.data.disputes[params.entryId].votesYes * self.data.disputes[params.entryId].votesYes) > self.data.minDisputeSettleVotes): # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    SWAP;       # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1388 # @some : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1388; # int : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%settleDispute : @storage
                    CDDAR;      # nat : @parameter%settleDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%settleDispute
                    DUP;        # @storage : @storage : nat : @parameter%settleDispute
                    DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1388 # @some : nat : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1388; # int : nat : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%settleDispute : @storage
                    CDDAR;      # nat : nat : @parameter%settleDispute : @storage
                    MUL;        # nat : @parameter%settleDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%settleDispute
                    DUP;        # @storage : @storage : nat : @parameter%settleDispute
                    DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1388 # @some : nat : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1388; # int : nat : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%settleDispute : @storage
                    CDDDR;      # nat : nat : @parameter%settleDispute : @storage
                    DIG 3;      # @storage : nat : nat : @parameter%settleDispute
                    DUP;        # @storage : @storage : nat : nat : @parameter%settleDispute
                    DUG 4;      # @storage : nat : nat : @parameter%settleDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                    DIG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                    DUG 4;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1388 # @some : nat : nat : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1388; # int : nat : nat : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : nat : @parameter%settleDispute : @storage
                    CDDDR;      # nat : nat : nat : @parameter%settleDispute : @storage
                    MUL;        # nat : nat : @parameter%settleDispute : @storage
                    COMPARE;    # int : @parameter%settleDispute : @storage
                    GT;         # bool : @parameter%settleDispute : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%settleDispute
                        DUP;        # @storage : @storage : @parameter%settleDispute
                        CADADR;     # nat : @storage : @parameter%settleDispute
                        SWAP;       # @storage : nat : @parameter%settleDispute
                        DUP;        # @storage : @storage : nat : @parameter%settleDispute
                        DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                        CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                        DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                        DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1388 # @some : nat : @parameter%settleDispute : @storage
                          }
                          {
                            PUSH int 1388; # int : nat : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%settleDispute : @storage
                        CDDDR;      # nat : nat : @parameter%settleDispute : @storage
                        DIG 3;      # @storage : nat : nat : @parameter%settleDispute
                        DUP;        # @storage : @storage : nat : nat : @parameter%settleDispute
                        DUG 4;      # @storage : nat : nat : @parameter%settleDispute : @storage
                        CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                        DIG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                        DUG 4;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1388 # @some : nat : nat : @parameter%settleDispute : @storage
                          }
                          {
                            PUSH int 1388; # int : nat : nat : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : @parameter%settleDispute : @storage
                        CDDDR;      # nat : nat : nat : @parameter%settleDispute : @storage
                        MUL;        # nat : nat : @parameter%settleDispute : @storage
                        COMPARE;    # int : @parameter%settleDispute : @storage
                        GT;         # bool : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%settleDispute : @storage
                      }; # bool : @parameter%settleDispute : @storage
                    IF
                      {
                        # sp.transfer(sp.record(entryId = params.entryId), sp.tez(0), sp.contract(sp.TRecord(entryId = sp.TNat).layout("entryId"), self.data.roundManager.open_some(), entry_point='disqualify').open_some()) # @parameter%settleDispute : @storage
                        NIL operation; # list operation : @parameter%settleDispute : @storage
                        DIG 2;      # @storage : list operation : @parameter%settleDispute
                        DUP;        # @storage : @storage : list operation : @parameter%settleDispute
                        DUG 3;      # @storage : list operation : @parameter%settleDispute : @storage
                        CDDAAR;     # option address : list operation : @parameter%settleDispute : @storage
                        IF_SOME
                          {}
                          {
                            PUSH int 1176; # int : list operation : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : @storage
                        CONTRACT %disqualify nat; # option (contract nat) : list operation : @parameter%settleDispute : @storage
                        IF_SOME
                          {}
                          {
                            PUSH int 1401; # int : list operation : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : @storage
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%settleDispute : @storage
                        DIG 3;      # @parameter%settleDispute : mutez : @some : list operation : @storage
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : mutez : @some : list operation : @storage
                        DUG 4;      # @parameter%settleDispute : mutez : @some : list operation : @parameter%settleDispute : @storage
                        TRANSFER_TOKENS; # operation : list operation : @parameter%settleDispute : @storage
                        CONS;       # list operation : @parameter%settleDispute : @storage
                        # self.data.disputes[params.entryId].resolved = 1 # list operation : @parameter%settleDispute : @storage
                        DIG 2;      # @storage : list operation : @parameter%settleDispute
                        DUP;        # @storage : @storage : list operation : @parameter%settleDispute
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : list operation : @parameter%settleDispute
                        SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CAR;        # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CDR;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUP;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CAR;        # nat : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CDR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DIG 7;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                        DUG 8;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 1409; # int : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUP;        # @some : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # @some : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        DUP;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CAR;        # address : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        CDAR;       # timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PUSH int 1; # int : timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # timestamp : int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PAIR;       # pair timestamp int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # address : pair timestamp int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PAIR;       # pair address (pair timestamp int) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SOME;       # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # @parameter%settleDispute : option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        UPDATE;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # nat : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PAIR;       # pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%settleDispute
                        # sp.transfer(sp.record(from_ = sp.to_address(sp.self), to_ = sp.sender, value = self.data.disputeFee), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%settleDispute
                        DUG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDADR;     # option address : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 1419; # int : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : @parameter%settleDispute
                        DUG 5;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAADAR;     # nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SENDER;     # address : nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        ADDRESS;    # address : pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONS;       # list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        SWAP;       # @storage : @parameter%settleDispute
                        # self.data.disputes[params.entryId].resolved = -1 # @storage : @parameter%settleDispute
                        DUP;        # @storage : @storage : @parameter%settleDispute
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : @parameter%settleDispute
                        SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CAR;        # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CDR;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUP;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CAR;        # nat : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CDR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DIG 6;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                        DUG 7;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 1431; # int : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUP;        # @some : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # @some : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        DUP;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CAR;        # address : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        CDAR;       # timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PUSH int -1; # int : timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # timestamp : int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PAIR;       # pair timestamp int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # address : pair timestamp int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PAIR;       # pair address (pair timestamp int) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PAIR;       # pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SOME;       # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # @parameter%settleDispute : option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        UPDATE;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # nat : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PAIR;       # pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        SWAP;       # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PAIR;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%settleDispute
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%settleDispute
                        SWAP;       # @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        NIL operation; # list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    # for voter in self.data.disputes[params.entryId].voters.keys(): ... # list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%settleDispute
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%settleDispute
                    DUG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CAADDR;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    GET;        # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    IF_SOME
                      {
                        # of_some: Get-item:1388 # @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        PUSH int 1388; # int : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDAR;       # map address nat : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    ITER
                      {
                        CAR;        # address : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        # sp.transfer(sp.record(from_ = sp.to_address(sp.self), to_ = voter, value = self.data.disputes[params.entryId].voters[voter]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%settleDispute
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%settleDispute
                        DUG 4;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDADR;     # option address : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 1442; # int : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PUSH mutez 0; # mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 5;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%settleDispute
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%settleDispute
                        DUG 6;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAADDR;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 5;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUG 6;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        GET;        # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {
                            # of_some: Get-item:1388 # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }
                          {
                            PUSH int 1388; # int : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDAR;       # map address nat : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # address : map address nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # address : address : map address nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUG 5;      # address : map address nat : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        GET;        # option nat : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {
                            # of_some: Get-item:1439 # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }
                          {
                            PUSH int 1439; # int : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 4;      # address : @some : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %to_ %value; # pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        ADDRESS;    # address : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (@some %value)) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONS;       # list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # list operation : @parameter%settleDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # @parameter%settleDispute : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DROP;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    DROP;       # @storage
                    # == settleRound ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage
                    DUP;        # @storage : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    MEM;        # bool : @storage
                    IF
                      {
                        DUP;        # @storage : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        PUSH nat 0; # nat : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1199 # @some : nat : @storage
                          }
                          {
                            PUSH int 1199; # int : nat : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @storage
                        CDR;        # nat : nat : @storage
                        COMPARE;    # int : @storage
                        GT;         # bool : @storage
                      }
                      {
                        PUSH bool False; # bool : @storage
                      }; # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(self.data.currentOnGoingRoundProposalId >= 0) # @storage
                    DUP;        # @storage : @storage
                    CAAADR;     # int : @storage
                    PUSH int 0; # int : int : @storage
                    SWAP;       # int : int : @storage
                    COMPARE;    # int : @storage
                    GE;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.currentOnGoingRoundProposalId >= 0"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(sp.now > self.data.newRoundProposals[sp.as_nat(self.data.currentOnGoingRoundProposalId)].end) # @storage
                    DUP;        # @storage : @storage
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUG 2;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    CAAADR;     # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    ISNAT;      # option nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1206; # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                        FAILWITH;   # FAILED
                      }; # @some : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1206 # @some : @storage
                      }
                      {
                        PUSH int 1206; # int : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @storage
                    CAADDR;     # timestamp : @storage
                    NOW;        # timestamp : timestamp : @storage
                    COMPARE;    # int : @storage
                    GT;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now > self.data.newRoundProposals[sp.as_nat(self.data.currentOnGoingRoundProposalId)].end"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.send(self.data.roundManager.open_some(), self.data.newRoundProposals[sp.as_nat(self.data.currentOnGoingRoundProposalId)].totalFunds) # @storage
                    DUP;        # @storage : @storage
                    CDDAAR;     # option address : @storage
                    NIL operation; # list operation : option address : @storage
                    SWAP;       # option address : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1176; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    CONTRACT %disburse unit; # option (contract unit) : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1217; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    DIG 2;      # @storage : @some : list operation
                    DUP;        # @storage : @storage : @some : list operation
                    CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    CAAADR;     # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    ISNAT;      # option nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1213; # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1213 # @some : @some : list operation : @storage
                      }
                      {
                        PUSH int 1213; # int : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @some : list operation : @storage
                    CDDAAR;     # mutez : @some : list operation : @storage
                    UNIT;       # unit : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                    SWAP;       # @storage : list operation
                    # self.data.currentOnGoingRoundProposalId = -1 # @storage : list operation
                    DUP;        # @storage : @storage : list operation
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : list operation
                    SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CDR;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    CAAR;       # address : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PUSH int -1; # int : address : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    SWAP;       # address : int : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair address int : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : list operation
                    PAIR;       # pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation
                    SWAP;       # list operation : pair (pair (pair (pair address int) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }
              {
                IF_LEFT
                  {
                    # == voteForDispute ==
                    # sp.verify(params.value > 0) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    PUSH nat 0; # nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    LT;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: params.value > 0"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(self.data.holders.contains(sp.sender)) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders.contains(sp.sender)"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    # sp.verify(self.data.holders[sp.sender].balance >= params.value) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%voteForDispute
                    DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                    DUG 3;      # @storage : nat : @parameter%voteForDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1346 # @some : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1346; # int : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForDispute : @storage
                    CDR;        # nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    GE;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].balance >= params.value"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(self.data.disputes.contains(params.entryId)) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.disputes.contains(params.entryId)"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(sp.now < self.data.disputes[params.entryId].expiry) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1352 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1352; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CADAR;      # timestamp : @parameter%voteForDispute : @storage
                    NOW;        # timestamp : timestamp : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    LT;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now < self.data.disputes[params.entryId].expiry"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(~ (self.data.disputes[params.entryId].voters.contains(sp.sender))) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1352 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1352; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CDAR;       # map address nat : @parameter%voteForDispute : @storage
                    SENDER;     # address : map address nat : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ (self.data.disputes[params.entryId].voters.contains(sp.sender))"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(sp.now < self.data.disputes[params.entryId].expiry) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CAADDR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1352 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1352; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CADAR;      # timestamp : @parameter%voteForDispute : @storage
                    NOW;        # timestamp : timestamp : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    LT;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now < self.data.disputes[params.entryId].expiry"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:700 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 700; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CAR;        # map address nat : @parameter%voteForDispute : @storage
                    SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : @parameter%voteForDispute : @storage
                    ADDRESS;    # address : map address nat : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    # sp.verify(self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%voteForDispute
                    DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                    DUG 3;      # @storage : nat : @parameter%voteForDispute : @storage
                    CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:701 # @some : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 701; # int : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForDispute : @storage
                    CAR;        # map address nat : nat : @parameter%voteForDispute : @storage
                    SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : nat : @parameter%voteForDispute : @storage
                    ADDRESS;    # address : map address nat : nat : @parameter%voteForDispute : @storage
                    GET;        # option nat : nat : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:701 # @some : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 701; # int : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    GE;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    # y = sp.local("y", params.value) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : nat : @storage
                    # while (y.value * y.value) > params.value : ... # @parameter%voteForDispute : nat : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : @storage
                    DUG 2;      # @parameter%voteForDispute : nat : @parameter%voteForDispute : @storage
                    CDDR;       # nat : nat : @parameter%voteForDispute : @storage
                    SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                    MUL;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                    GT;         # bool : nat : @parameter%voteForDispute : @storage
                    LOOP
                      {
                        # y.value = ((params.value // y.value) + y.value) // 2 # nat : @parameter%voteForDispute : @storage
                        PUSH nat 2; # nat : nat : @parameter%voteForDispute : @storage
                        SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        DIG 3;      # @parameter%voteForDispute : nat : nat : nat : @storage
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : nat : nat : @storage
                        DUG 4;      # @parameter%voteForDispute : nat : nat : nat : @parameter%voteForDispute : @storage
                        CDDR;       # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        EDIV;       # option (pair nat nat) : nat : nat : @parameter%voteForDispute : @storage
                        IF_SOME
                          {
                            CAR;        # nat : nat : nat : @parameter%voteForDispute : @storage
                          }
                          {
                            PUSH int 707; # int : nat : nat : @parameter%voteForDispute : @storage
                            FAILWITH;   # FAILED
                          }; # nat : nat : nat : @parameter%voteForDispute : @storage
                        ADD;        # nat : nat : @parameter%voteForDispute : @storage
                        EDIV;       # option (pair nat nat) : @parameter%voteForDispute : @storage
                        IF_SOME
                          {
                            CAR;        # nat : @parameter%voteForDispute : @storage
                          }
                          {
                            PUSH int 707; # int : @parameter%voteForDispute : @storage
                            FAILWITH;   # FAILED
                          }; # nat : @parameter%voteForDispute : @storage
                        SWAP;       # @parameter%voteForDispute : nat : @storage
                        # check for next loop: (y.value * y.value) > params.value # @parameter%voteForDispute : nat : @storage
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : @storage
                        DUG 2;      # @parameter%voteForDispute : nat : @parameter%voteForDispute : @storage
                        CDDR;       # nat : nat : @parameter%voteForDispute : @storage
                        SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        DUG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        MUL;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                        GT;         # bool : nat : @parameter%voteForDispute : @storage
                      }; # nat : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : nat : @storage
                    # sp.verify(((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))) # @parameter%voteForDispute : nat : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : @storage
                    DUG 2;      # @parameter%voteForDispute : nat : @parameter%voteForDispute : @storage
                    CDDR;       # nat : nat : @parameter%voteForDispute : @storage
                    SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                    MUL;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                    LE;         # bool : nat : @parameter%voteForDispute : @storage
                    IF
                      {
                        DUP;        # nat : nat : @parameter%voteForDispute : @storage
                        PUSH nat 1; # nat : nat : nat : @parameter%voteForDispute : @storage
                        ADD;        # nat : nat : @parameter%voteForDispute : @storage
                        PUSH nat 1; # nat : nat : nat : @parameter%voteForDispute : @storage
                        DIG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        DUG 3;      # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        ADD;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        MUL;        # nat : nat : @parameter%voteForDispute : @storage
                        DIG 2;      # @parameter%voteForDispute : nat : nat : @storage
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : nat : @storage
                        DUG 3;      # @parameter%voteForDispute : nat : nat : @parameter%voteForDispute : @storage
                        CDDR;       # nat : nat : nat : @parameter%voteForDispute : @storage
                        COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                        LT;         # bool : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : nat : @parameter%voteForDispute : @storage
                      }; # bool : nat : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: ((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))"; # string : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # nat : @parameter%voteForDispute : @storage
                    # if params.inFavor == True: # nat : @parameter%voteForDispute : @storage
                    PUSH bool True; # bool : nat : @parameter%voteForDispute : @storage
                    DIG 2;      # @parameter%voteForDispute : bool : nat : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : bool : nat : @storage
                    DUG 3;      # @parameter%voteForDispute : bool : nat : @parameter%voteForDispute : @storage
                    CDAR;       # bool : bool : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                    EQ;         # bool : nat : @parameter%voteForDispute : @storage
                    IF
                      {
                        # self.data.disputes[params.entryId].votesYes += y.value # nat : @parameter%voteForDispute : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForDispute
                        DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : nat : @parameter%voteForDispute
                        SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # nat : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DIG 7;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat
                        DUG 8;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # nat : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUG 2;      # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 712; # int : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                            FAILWITH;   # FAILED
                          }; # @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # @some : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # @some : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # map address nat : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # nat : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DIG 10;     # nat : nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        ADD;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair nat nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map address nat) (pair nat nat) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # nat : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForDispute
                        SWAP;       # @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        # self.data.disputes[params.entryId].votesNo += y.value # nat : @parameter%voteForDispute : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForDispute
                        DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @storage : nat : @parameter%voteForDispute
                        SWAP;       # @storage : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # nat : pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DIG 7;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat
                        DUG 8;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # nat : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUG 2;      # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 714; # int : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                            FAILWITH;   # FAILED
                          }; # @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # @some : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # @some : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # map address nat : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CDR;        # nat : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        CAR;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : nat : @parameter%voteForDispute
                        DIG 10;     # nat : nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        ADD;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair nat nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map address nat) (pair nat nat) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # nat : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        SWAP;       # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForDispute
                        SWAP;       # @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }; # @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForDispute
                    # self.data.disputes[params.entryId].voters[sp.sender] = params.value # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForDispute
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForDispute
                    CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForDispute
                    SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUP;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CDR;        # pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CAR;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUP;        # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CAR;        # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CDR;        # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUP;        # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CAR;        # nat : pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CDR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DIG 6;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUG 7;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUP;        # nat : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUG 2;      # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    IF_SOME
                      {}
                      {
                        PUSH int 716; # int : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                        FAILWITH;   # FAILED
                      }; # @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUP;        # @some : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # @some : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CDR;        # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DUP;        # pair (map address nat) (pair nat nat) : pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CDR;        # pair nat nat : pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # pair (map address nat) (pair nat nat) : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CAR;        # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SENDER;     # address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    DIG 10;     # @parameter%voteForDispute : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))
                    DUG 11;     # @parameter%voteForDispute : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    CDDR;       # nat : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SOME;       # option nat : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # address : option nat : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    UPDATE;     # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    PAIR;       # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map address nat) (pair nat nat) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # nat : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    PAIR;       # pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (address %admin) (int %currentOnGoingRoundProposalId) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    SWAP;       # pair (address %admin) (int %currentOnGoingRoundProposalId) : pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))))) : pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForDispute
                    SWAP;       # @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.to_address(sp.self), value = params.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    NIL operation; # list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%voteForDispute
                    DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%voteForDispute
                    DUG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDDADR;     # option address : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    IF_SOME
                      {}
                      {
                        PUSH int 558; # int : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    IF_SOME
                      {}
                      {
                        PUSH int 726; # int : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%voteForDispute : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    DIG 3;      # @parameter%voteForDispute : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CDDR;       # nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    ADDRESS;    # address : nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    SENDER;     # address : pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                    CONS;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }
                  {
                    IF_LEFT
                      {
                        SWAP;       # @storage : @parameter%voteForNewRoundProposal
                        # == voteForNewRoundProposal ==
                        # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                        DUG 2;      # @storage : @parameter%voteForNewRoundProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                        MEM;        # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {
                            PUSH nat 0; # nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                            DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                            DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                            CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                            SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                            GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:1022 # @some : nat : @parameter%voteForNewRoundProposal : @storage
                              }
                              {
                                PUSH int 1022; # int : nat : @parameter%voteForNewRoundProposal : @storage
                                FAILWITH;   # FAILED
                              }; # @some : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                            GT;         # bool : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH bool False; # bool : @parameter%voteForNewRoundProposal : @storage
                          }; # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @storage : @parameter%voteForNewRoundProposal
                        # sp.verify(self.data.newRoundProposalActive) # @storage : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                        DUG 2;      # @storage : @parameter%voteForNewRoundProposal : @storage
                        CDADAR;     # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.newRoundProposalActive"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        # sp.verify(params.value > 0) # @parameter%voteForNewRoundProposal : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : @parameter%voteForNewRoundProposal : @storage
                        PUSH nat 0; # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                        LT;         # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: params.value > 0"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @storage : @parameter%voteForNewRoundProposal
                        # sp.verify(sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry) # @storage : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                        CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%voteForNewRoundProposal
                        SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                        DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1032 # @some : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 1032; # int : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForNewRoundProposal : @storage
                        CADAR;      # timestamp : @parameter%voteForNewRoundProposal : @storage
                        NOW;        # timestamp : timestamp : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                        LT;         # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0) # @parameter%voteForNewRoundProposal : @storage
                        PUSH int 0; # int : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # @storage : int : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : int : @parameter%voteForNewRoundProposal
                        CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%voteForNewRoundProposal
                        SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal
                        DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal : @storage
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1032 # @some : int : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 1032; # int : int : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : int : @parameter%voteForNewRoundProposal : @storage
                        CDAAR;      # int : int : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                        EQ;         # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @storage : @parameter%voteForNewRoundProposal
                        # sp.verify(~ (self.data.newRoundProposals[self.data.newRoundProposalId].voters.contains(sp.sender))) # @storage : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                        CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%voteForNewRoundProposal
                        SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                        DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1032 # @some : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 1032; # int : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForNewRoundProposal : @storage
                        CDDADR;     # map address nat : @parameter%voteForNewRoundProposal : @storage
                        SENDER;     # address : map address nat : @parameter%voteForNewRoundProposal : @storage
                        MEM;        # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {
                            PUSH string "WrongCondition: ~ (self.data.newRoundProposals[self.data.newRoundProposalId].voters.contains(sp.sender))"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @storage : @parameter%voteForNewRoundProposal
                        # sp.verify(sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry) # @storage : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                        CDADDDR;    # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%voteForNewRoundProposal
                        SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                        DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1032 # @some : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 1032; # int : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForNewRoundProposal : @storage
                        CADAR;      # timestamp : @parameter%voteForNewRoundProposal : @storage
                        NOW;        # timestamp : timestamp : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                        LT;         # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @storage : @parameter%voteForNewRoundProposal
                        # sp.verify(self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))) # @storage : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                        DUG 2;      # @storage : @parameter%voteForNewRoundProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:700 # @some : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 700; # int : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # map address nat : @parameter%voteForNewRoundProposal : @storage
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : @parameter%voteForNewRoundProposal : @storage
                        ADDRESS;    # address : map address nat : @parameter%voteForNewRoundProposal : @storage
                        MEM;        # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        # sp.verify(self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value) # @parameter%voteForNewRoundProposal : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                        DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:701 # @some : nat : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 701; # int : nat : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # map address nat : nat : @parameter%voteForNewRoundProposal : @storage
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : nat : @parameter%voteForNewRoundProposal : @storage
                        ADDRESS;    # address : map address nat : nat : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option nat : nat : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:701 # @some : nat : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 701; # int : nat : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                        GE;         # bool : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value"; # string : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForNewRoundProposal : @storage
                        # y = sp.local("y", params.value) # @parameter%voteForNewRoundProposal : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @parameter%voteForNewRoundProposal : nat : @storage
                        # while (y.value * y.value) > params.value : ... # @parameter%voteForNewRoundProposal : nat : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : @storage
                        DUG 2;      # @parameter%voteForNewRoundProposal : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        MUL;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                        GT;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                        LOOP
                          {
                            # y.value = ((params.value // y.value) + y.value) // 2 # nat : @parameter%voteForNewRoundProposal : @storage
                            PUSH nat 2; # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 3;      # @parameter%voteForNewRoundProposal : nat : nat : nat : @storage
                            DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : nat : nat : @storage
                            DUG 4;      # @parameter%voteForNewRoundProposal : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            EDIV;       # option (pair nat nat) : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            IF_SOME
                              {
                                CAR;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                              }
                              {
                                PUSH int 707; # int : nat : nat : @parameter%voteForNewRoundProposal : @storage
                                FAILWITH;   # FAILED
                              }; # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            ADD;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            EDIV;       # option (pair nat nat) : @parameter%voteForNewRoundProposal : @storage
                            IF_SOME
                              {
                                CAR;        # nat : @parameter%voteForNewRoundProposal : @storage
                              }
                              {
                                PUSH int 707; # int : @parameter%voteForNewRoundProposal : @storage
                                FAILWITH;   # FAILED
                              }; # nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # @parameter%voteForNewRoundProposal : nat : @storage
                            # check for next loop: (y.value * y.value) > params.value # @parameter%voteForNewRoundProposal : nat : @storage
                            DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : @storage
                            DUG 2;      # @parameter%voteForNewRoundProposal : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DUG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            MUL;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                            GT;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                          }; # nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @parameter%voteForNewRoundProposal : nat : @storage
                        # sp.verify(((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))) # @parameter%voteForNewRoundProposal : nat : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : @storage
                        DUG 2;      # @parameter%voteForNewRoundProposal : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        MUL;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                        LE;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {
                            DUP;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            PUSH nat 1; # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            ADD;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            PUSH nat 1; # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DUG 3;      # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            ADD;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            MUL;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 2;      # @parameter%voteForNewRoundProposal : nat : nat : @storage
                            DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : nat : @storage
                            DUG 3;      # @parameter%voteForNewRoundProposal : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                            LT;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH bool False; # bool : nat : @parameter%voteForNewRoundProposal : @storage
                          }; # bool : nat : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: ((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))"; # string : nat : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # nat : @parameter%voteForNewRoundProposal : @storage
                        # if params.inFavor == True: # nat : @parameter%voteForNewRoundProposal : @storage
                        PUSH bool True; # bool : nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # @parameter%voteForNewRoundProposal : bool : nat : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : bool : nat : @storage
                        DUG 3;      # @parameter%voteForNewRoundProposal : bool : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # bool : bool : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                        EQ;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                        IF
                          {
                            # self.data.newRoundProposals[self.data.newRoundProposalId].votesYes += y.value # nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                            DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                            DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # bool : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 9;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            IF_SOME
                              {}
                              {
                                PUSH int 712; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                                FAILWITH;   # FAILED
                              }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # nat : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DIG 12;     # nat : nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            ADD;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair nat nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal
                            SWAP;       # @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }
                          {
                            # self.data.newRoundProposals[self.data.newRoundProposalId].votesNo += y.value # nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                            DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                            DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # bool : pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal : @storage
                            DIG 9;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            IF_SOME
                              {}
                              {
                                PUSH int 714; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                                FAILWITH;   # FAILED
                              }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CDR;        # nat : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            CAR;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForNewRoundProposal
                            DIG 12;     # nat : nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            ADD;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair nat nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForNewRoundProposal
                            PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal
                            SWAP;       # @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                          }; # @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal
                        # self.data.newRoundProposals[self.data.newRoundProposalId].voters[sp.sender] = params.value # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal
                        DUG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # bool : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CAR;        # nat : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SWAP;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 8;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CDADDAR;    # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 716; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CDR;        # pair nat nat : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        DUP;        # pair (mutez %totalFunds) (map %voters address nat) : pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CAR;        # mutez : pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CDR;        # map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SENDER;     # address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        DIG 13;     # @parameter%voteForNewRoundProposal : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUG 14;     # @parameter%voteForNewRoundProposal : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        CDR;        # nat : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SOME;       # option nat : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # address : option nat : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        UPDATE;     # map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # mutez : map address nat : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair mutez (map address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair mutez (map address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair mutez (map address nat)) (pair nat nat) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : nat : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat))))) : bool : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) : pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference) : pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : @parameter%voteForNewRoundProposal
                        SWAP;       # @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.to_address(sp.self), value = params.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        NIL operation; # list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%voteForNewRoundProposal
                        DUG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDDADR;     # option address : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 726; # int : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        DIG 3;      # @parameter%voteForNewRoundProposal : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CDR;        # nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        ADDRESS;    # address : nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        SENDER;     # address : pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                        CONS;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                      }
                      {
                        SWAP;       # @storage : @parameter%voteForTokenMintProposal
                        # == voteForTokenMintProposal ==
                        # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%voteForTokenMintProposal
                        DUG 2;      # @storage : @parameter%voteForTokenMintProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForTokenMintProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForTokenMintProposal : @storage
                        MEM;        # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {
                            PUSH nat 0; # nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 2;      # @storage : nat : @parameter%voteForTokenMintProposal
                            DUP;        # @storage : @storage : nat : @parameter%voteForTokenMintProposal
                            DUG 3;      # @storage : nat : @parameter%voteForTokenMintProposal : @storage
                            CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForTokenMintProposal : @storage
                            SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForTokenMintProposal : @storage
                            GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForTokenMintProposal : @storage
                            IF_SOME
                              {
                                # of_some: Get-item:847 # @some : nat : @parameter%voteForTokenMintProposal : @storage
                              }
                              {
                                PUSH int 847; # int : nat : @parameter%voteForTokenMintProposal : @storage
                                FAILWITH;   # FAILED
                              }; # @some : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            COMPARE;    # int : @parameter%voteForTokenMintProposal : @storage
                            GT;         # bool : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH bool False; # bool : @parameter%voteForTokenMintProposal : @storage
                          }; # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # @storage : @parameter%voteForTokenMintProposal
                        # sp.verify(self.data.tokenMintProposalActive) # @storage : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%voteForTokenMintProposal
                        DUG 2;      # @storage : @parameter%voteForTokenMintProposal : @storage
                        CDDDAR;     # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.tokenMintProposalActive"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        # sp.verify(params.value > 0) # @parameter%voteForTokenMintProposal : @storage
                        DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : @storage
                        CDR;        # nat : @parameter%voteForTokenMintProposal : @storage
                        PUSH nat 0; # nat : nat : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : @parameter%voteForTokenMintProposal : @storage
                        LT;         # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: params.value > 0"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # @storage : @parameter%voteForTokenMintProposal
                        # sp.verify(sp.now < self.data.tokenMintProposals[self.data.tokenMintProposalId].expiry) # @storage : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%voteForTokenMintProposal
                        CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : @parameter%voteForTokenMintProposal
                        SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal
                        DUG 3;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:857 # @some : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH int 857; # int : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForTokenMintProposal : @storage
                        CADDR;      # timestamp : @parameter%voteForTokenMintProposal : @storage
                        NOW;        # timestamp : timestamp : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : @parameter%voteForTokenMintProposal : @storage
                        LT;         # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: sp.now < self.data.tokenMintProposals[self.data.tokenMintProposalId].expiry"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        # sp.verify(self.data.tokenMintProposals[self.data.tokenMintProposalId].resolved == 0) # @parameter%voteForTokenMintProposal : @storage
                        PUSH int 0; # int : @parameter%voteForTokenMintProposal : @storage
                        DIG 2;      # @storage : int : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : int : @parameter%voteForTokenMintProposal
                        CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : int : @parameter%voteForTokenMintProposal
                        SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%voteForTokenMintProposal
                        DUG 4;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%voteForTokenMintProposal : @storage
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%voteForTokenMintProposal : @storage
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%voteForTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:857 # @some : int : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH int 857; # int : int : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : int : @parameter%voteForTokenMintProposal : @storage
                        CDAAR;      # int : int : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : @parameter%voteForTokenMintProposal : @storage
                        EQ;         # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.tokenMintProposals[self.data.tokenMintProposalId].resolved == 0"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # @storage : @parameter%voteForTokenMintProposal
                        # sp.verify(~ (self.data.tokenMintProposals[self.data.tokenMintProposalId].voters.contains(sp.sender))) # @storage : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%voteForTokenMintProposal
                        CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : @parameter%voteForTokenMintProposal
                        SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal
                        DUG 3;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:857 # @some : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH int 857; # int : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForTokenMintProposal : @storage
                        CDADR;      # map address nat : @parameter%voteForTokenMintProposal : @storage
                        SENDER;     # address : map address nat : @parameter%voteForTokenMintProposal : @storage
                        MEM;        # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {
                            PUSH string "WrongCondition: ~ (self.data.tokenMintProposals[self.data.tokenMintProposalId].voters.contains(sp.sender))"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # @storage : @parameter%voteForTokenMintProposal
                        # sp.verify(sp.now < self.data.tokenMintProposals[self.data.tokenMintProposalId].expiry) # @storage : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%voteForTokenMintProposal
                        CDDDDDR;    # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @storage : @parameter%voteForTokenMintProposal
                        SWAP;       # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal
                        DUG 3;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:857 # @some : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH int 857; # int : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForTokenMintProposal : @storage
                        CADDR;      # timestamp : @parameter%voteForTokenMintProposal : @storage
                        NOW;        # timestamp : timestamp : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : @parameter%voteForTokenMintProposal : @storage
                        LT;         # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: sp.now < self.data.tokenMintProposals[self.data.tokenMintProposalId].expiry"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # @storage : @parameter%voteForTokenMintProposal
                        # sp.verify(self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))) # @storage : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : @parameter%voteForTokenMintProposal
                        DUG 2;      # @storage : @parameter%voteForTokenMintProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForTokenMintProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForTokenMintProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:700 # @some : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH int 700; # int : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%voteForTokenMintProposal : @storage
                        CAR;        # map address nat : @parameter%voteForTokenMintProposal : @storage
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : @parameter%voteForTokenMintProposal : @storage
                        ADDRESS;    # address : map address nat : @parameter%voteForTokenMintProposal : @storage
                        MEM;        # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        # sp.verify(self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value) # @parameter%voteForTokenMintProposal : @storage
                        DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : @storage
                        CDR;        # nat : @parameter%voteForTokenMintProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForTokenMintProposal
                        DUP;        # @storage : @storage : nat : @parameter%voteForTokenMintProposal
                        DUG 3;      # @storage : nat : @parameter%voteForTokenMintProposal : @storage
                        CADAAR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForTokenMintProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForTokenMintProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:701 # @some : nat : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH int 701; # int : nat : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%voteForTokenMintProposal : @storage
                        CAR;        # map address nat : nat : @parameter%voteForTokenMintProposal : @storage
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : map address nat : nat : @parameter%voteForTokenMintProposal : @storage
                        ADDRESS;    # address : map address nat : nat : @parameter%voteForTokenMintProposal : @storage
                        GET;        # option nat : nat : @parameter%voteForTokenMintProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:701 # @some : nat : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH int 701; # int : nat : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : @parameter%voteForTokenMintProposal : @storage
                        GE;         # bool : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value"; # string : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @parameter%voteForTokenMintProposal : @storage
                        # y = sp.local("y", params.value) # @parameter%voteForTokenMintProposal : @storage
                        DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : @storage
                        CDR;        # nat : @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # @parameter%voteForTokenMintProposal : nat : @storage
                        # while (y.value * y.value) > params.value : ... # @parameter%voteForTokenMintProposal : nat : @storage
                        DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : nat : @storage
                        DUG 2;      # @parameter%voteForTokenMintProposal : nat : @parameter%voteForTokenMintProposal : @storage
                        CDR;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # nat : nat : @parameter%voteForTokenMintProposal : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        DUG 2;      # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        MUL;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForTokenMintProposal : @storage
                        GT;         # bool : nat : @parameter%voteForTokenMintProposal : @storage
                        LOOP
                          {
                            # y.value = ((params.value // y.value) + y.value) // 2 # nat : @parameter%voteForTokenMintProposal : @storage
                            PUSH nat 2; # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 3;      # @parameter%voteForTokenMintProposal : nat : nat : nat : @storage
                            DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : nat : nat : nat : @storage
                            DUG 4;      # @parameter%voteForTokenMintProposal : nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # nat : nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            EDIV;       # option (pair nat nat) : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            IF_SOME
                              {
                                CAR;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                              }
                              {
                                PUSH int 707; # int : nat : nat : @parameter%voteForTokenMintProposal : @storage
                                FAILWITH;   # FAILED
                              }; # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            ADD;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            EDIV;       # option (pair nat nat) : @parameter%voteForTokenMintProposal : @storage
                            IF_SOME
                              {
                                CAR;        # nat : @parameter%voteForTokenMintProposal : @storage
                              }
                              {
                                PUSH int 707; # int : @parameter%voteForTokenMintProposal : @storage
                                FAILWITH;   # FAILED
                              }; # nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # @parameter%voteForTokenMintProposal : nat : @storage
                            # check for next loop: (y.value * y.value) > params.value # @parameter%voteForTokenMintProposal : nat : @storage
                            DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : nat : @storage
                            DUG 2;      # @parameter%voteForTokenMintProposal : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DUG 2;      # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # nat : nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            MUL;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            COMPARE;    # int : nat : @parameter%voteForTokenMintProposal : @storage
                            GT;         # bool : nat : @parameter%voteForTokenMintProposal : @storage
                          }; # nat : @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # @parameter%voteForTokenMintProposal : nat : @storage
                        # sp.verify(((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))) # @parameter%voteForTokenMintProposal : nat : @storage
                        DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : nat : @storage
                        DUG 2;      # @parameter%voteForTokenMintProposal : nat : @parameter%voteForTokenMintProposal : @storage
                        CDR;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                        SWAP;       # nat : nat : @parameter%voteForTokenMintProposal : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        DUG 2;      # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        MUL;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForTokenMintProposal : @storage
                        LE;         # bool : nat : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {
                            DUP;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            PUSH nat 1; # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            ADD;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            PUSH nat 1; # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 2;      # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # nat : nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DUG 3;      # nat : nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            ADD;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            MUL;        # nat : nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 2;      # @parameter%voteForTokenMintProposal : nat : nat : @storage
                            DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : nat : nat : @storage
                            DUG 3;      # @parameter%voteForTokenMintProposal : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # nat : nat : nat : @parameter%voteForTokenMintProposal : @storage
                            COMPARE;    # int : nat : @parameter%voteForTokenMintProposal : @storage
                            LT;         # bool : nat : @parameter%voteForTokenMintProposal : @storage
                          }
                          {
                            PUSH bool False; # bool : nat : @parameter%voteForTokenMintProposal : @storage
                          }; # bool : nat : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {}
                          {
                            PUSH string "WrongCondition: ((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))"; # string : nat : @parameter%voteForTokenMintProposal : @storage
                            FAILWITH;   # FAILED
                          }; # nat : @parameter%voteForTokenMintProposal : @storage
                        # if params.inFavor == True: # nat : @parameter%voteForTokenMintProposal : @storage
                        PUSH bool True; # bool : nat : @parameter%voteForTokenMintProposal : @storage
                        DIG 2;      # @parameter%voteForTokenMintProposal : bool : nat : @storage
                        DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : bool : nat : @storage
                        DUG 3;      # @parameter%voteForTokenMintProposal : bool : nat : @parameter%voteForTokenMintProposal : @storage
                        CAR;        # bool : bool : nat : @parameter%voteForTokenMintProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForTokenMintProposal : @storage
                        EQ;         # bool : nat : @parameter%voteForTokenMintProposal : @storage
                        IF
                          {
                            # self.data.tokenMintProposals[self.data.tokenMintProposalId].votesYes += y.value # nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 2;      # @storage : nat : @parameter%voteForTokenMintProposal
                            DUP;        # @storage : @storage : nat : @parameter%voteForTokenMintProposal
                            DUG 3;      # @storage : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # @storage : @storage : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # bool : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # nat : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 9;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # nat : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUG 2;      # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            IF_SOME
                              {}
                              {
                                PUSH int 712; # int : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                                FAILWITH;   # FAILED
                              }; # @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # @some : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CAR;        # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            SWAP;       # @some : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDR;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CAR;        # pair (int %resolved) (map %voters address nat) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CAR;        # nat : pair (nat %votesNo) (nat %votesYes) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDR;        # nat : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DIG 11;     # nat : nat : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            ADD;        # nat : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # nat : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair nat nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (int %resolved) (map %voters address nat) : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SOME;       # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # nat : option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            UPDATE;     # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal
                            SWAP;       # @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                          }
                          {
                            # self.data.tokenMintProposals[self.data.tokenMintProposalId].votesNo += y.value # nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 2;      # @storage : nat : @parameter%voteForTokenMintProposal
                            DUP;        # @storage : @storage : nat : @parameter%voteForTokenMintProposal
                            DUG 3;      # @storage : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # @storage : @storage : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @storage : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # @storage : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # bool : pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CAR;        # nat : pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            SWAP;       # pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            CDR;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DUP;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal : @storage
                            DIG 9;      # @storage : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # nat : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUG 2;      # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            IF_SOME
                              {}
                              {
                                PUSH int 714; # int : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                                FAILWITH;   # FAILED
                              }; # @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # @some : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CAR;        # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            SWAP;       # @some : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDR;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CAR;        # pair (int %resolved) (map %voters address nat) : pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CDR;        # nat : pair (nat %votesNo) (nat %votesYes) : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            CAR;        # nat : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : nat : @parameter%voteForTokenMintProposal
                            DIG 11;     # nat : nat : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            ADD;        # nat : nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair nat nat : pair (int %resolved) (map %voters address nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (int %resolved) (map %voters address nat) : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SOME;       # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # nat : option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            UPDATE;     # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : @parameter%voteForTokenMintProposal
                            PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal
                            SWAP;       # @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                          }; # @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal
                        # self.data.tokenMintProposals[self.data.tokenMintProposalId].voters[sp.sender] = params.value # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal
                        DUG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CAR;        # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        SWAP;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CDR;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        DUP;        # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CAR;        # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        SWAP;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CDR;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        DUP;        # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CAR;        # pair (option %roundManager address) (option %token address) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        SWAP;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CDR;        # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        DUP;        # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CAR;        # bool : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        SWAP;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CDR;        # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        DUP;        # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CAR;        # nat : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        SWAP;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        CDR;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        DUP;        # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))))))))
                        DIG 8;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat)))))))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CDDDDAR;    # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        DUG 2;      # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        GET;        # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 716; # int : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CAR;        # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : @some : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # @some : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CDR;        # pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        DUP;        # pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CDR;        # pair nat nat : pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # pair (pair (int %resolved) (map %voters address nat)) (pair nat nat) : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CAR;        # pair (int %resolved) (map %voters address nat) : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        DUP;        # pair (int %resolved) (map %voters address nat) : pair (int %resolved) (map %voters address nat) : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CAR;        # int : pair (int %resolved) (map %voters address nat) : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # pair (int %resolved) (map %voters address nat) : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CDR;        # map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SENDER;     # address : map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        DIG 12;     # @parameter%voteForTokenMintProposal : address : map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUP;        # @parameter%voteForTokenMintProposal : @parameter%voteForTokenMintProposal : address : map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))
                        DUG 13;     # @parameter%voteForTokenMintProposal : address : map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        CDR;        # nat : address : map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SOME;       # option nat : address : map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # address : option nat : map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        UPDATE;     # map address nat : int : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # int : map address nat : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair int (map address nat) : pair nat nat : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair (pair int (map address nat)) (pair nat nat) : pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # pair (nat %amount) (pair (address %creator) (timestamp %expiry)) : pair (pair int (map address nat)) (pair nat nat) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SOME;       # option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # nat : option (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))) : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        UPDATE;     # big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))) : nat : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # nat : big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))) : bool : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # bool : pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # pair (option %roundManager address) (option %token address) : pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))))) : pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))) : pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))) : pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : @parameter%voteForTokenMintProposal
                        SWAP;       # pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake)))) : pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))) : @parameter%voteForTokenMintProposal
                        PAIR;       # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))))))) : @parameter%voteForTokenMintProposal
                        SWAP;       # @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.to_address(sp.self), value = params.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        NIL operation; # list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        DIG 2;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))))))) : list operation : @parameter%voteForTokenMintProposal
                        DUP;        # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))))))) : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))))))) : list operation : @parameter%voteForTokenMintProposal
                        DUG 3;      # pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat)))))))) : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        CDDADR;     # option address : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 558; # int : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        IF_SOME
                          {}
                          {
                            PUSH int 726; # int : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%voteForTokenMintProposal : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        DIG 3;      # @parameter%voteForTokenMintProposal : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        CDR;        # nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        SELF;       # contract (or (or (or (or (pair %addTokens (address %address) (nat %value)) (pair %decreaseApproval (address %address) (pair (address %owner) (nat %value)))) (or (string %donateToRound) (unit %executeNewRoundProposal))) (or (or (unit %executeTokenMintProposal) (pair %initialMint (list %_members address) (pair (address %_token) (nat %value)))) (or (unit %listNewRound) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (pair %proposeTokenMint (timestamp %expiry) (nat %mintAmount)))))) (or (or (or (nat %raiseDispute) (pair %removeTokens (address %address) (nat %value))) (or (pair %setApproval (address %address) (pair (address %owner) (nat %value))) (address %setRoundManagerContract))) (or (or (nat %settleDispute) (unit %settleRound)) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (or (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)) (pair %voteForTokenMintProposal (bool %inFavor) (nat %value))))))) : nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        ADDRESS;    # address : nat : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        SENDER;     # address : pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                        CONS;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair bool (pair nat (big_map nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair int (map address nat)) (pair nat nat))))))))
                      }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair bool (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
                  }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
              }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
          }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair nat (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map %holders address (pair (map %approvals address nat) (nat %balance))) (nat %minDisputeSettleVotes)) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
      }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
    NIL operation; # list operation : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
    SWAP;       # list operation : list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
      }; # list operation : pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))))))
    PAIR;       # pair (list operation) (pair (pair (pair (pair (address %admin) (int %currentOnGoingRoundProposalId)) (pair (nat %disputeFee) (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))))) (pair (pair (big_map address (pair (map address nat) nat)) nat) (pair (nat %minNewRoundProposalStake) (pair (nat %minNewRoundProposalVotes) (nat %minTokenMintProposalStake))))) (pair (pair (pair (nat %minTokenMintProposalVotes) (int %minimumVoteDifference)) (pair (bool %newRoundProposalActive) (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))) (pair (pair (option %roundManager address) (option %token address)) (pair (bool %tokenMintProposalActive) (pair (nat %tokenMintProposalId) (big_map %tokenMintProposals nat (pair (pair (nat %amount) (pair (address %creator) (timestamp %expiry))) (pair (pair (int %resolved) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))))))
  };