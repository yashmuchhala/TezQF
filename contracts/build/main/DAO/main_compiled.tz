parameter (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value))))));
storage   (pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # == donateToRound ==
                # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1) # @parameter%donateToRound : @storage
                PUSH int 1; # int : @parameter%donateToRound : @storage
                DIG 2;      # @storage : int : @parameter%donateToRound
                DUP;        # @storage : @storage : int : @parameter%donateToRound
                CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%donateToRound
                SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound
                DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound
                DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound : @storage
                CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound : @storage
                GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%donateToRound : @storage
                IF_SOME
                  {
                    # of_some: Get-item:875 # @some : int : @parameter%donateToRound : @storage
                  }
                  {
                    PUSH int 875; # int : int : @parameter%donateToRound : @storage
                    FAILWITH;   # FAILED
                  }; # @some : int : @parameter%donateToRound : @storage
                CDAAR;      # int : int : @parameter%donateToRound : @storage
                COMPARE;    # int : @parameter%donateToRound : @storage
                EQ;         # bool : @parameter%donateToRound : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1"; # string : @parameter%donateToRound : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%donateToRound : @storage
                SWAP;       # @storage : @parameter%donateToRound
                # sp.verify(~ self.data.newRoundProposals[self.data.newRoundProposalId].listed) # @storage : @parameter%donateToRound
                DUP;        # @storage : @storage : @parameter%donateToRound
                CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%donateToRound
                SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                IF_SOME
                  {
                    # of_some: Get-item:875 # @some : @parameter%donateToRound : @storage
                  }
                  {
                    PUSH int 875; # int : @parameter%donateToRound : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%donateToRound : @storage
                CADDAR;     # bool : @parameter%donateToRound : @storage
                IF
                  {
                    PUSH string "WrongCondition: ~ self.data.newRoundProposals[self.data.newRoundProposalId].listed"; # string : @parameter%donateToRound : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%donateToRound : @storage
                SWAP;       # @storage : @parameter%donateToRound
                # sp.verify(~ (self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds.contains(sp.sender))) # @storage : @parameter%donateToRound
                DUP;        # @storage : @storage : @parameter%donateToRound
                CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%donateToRound
                SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound
                DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%donateToRound : @storage
                IF_SOME
                  {
                    # of_some: Get-item:875 # @some : @parameter%donateToRound : @storage
                  }
                  {
                    PUSH int 875; # int : @parameter%donateToRound : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%donateToRound : @storage
                CDADAR;     # map address (pair (mutez %amount) (string %name)) : @parameter%donateToRound : @storage
                SENDER;     # address : map address (pair (mutez %amount) (string %name)) : @parameter%donateToRound : @storage
                MEM;        # bool : @parameter%donateToRound : @storage
                IF
                  {
                    PUSH string "WrongCondition: ~ (self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds.contains(sp.sender))"; # string : @parameter%donateToRound : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%donateToRound : @storage
                SWAP;       # @storage : @parameter%donateToRound
                # self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds[sp.sender] = sp.record(amount = sp.amount, name = params.name) # @storage : @parameter%donateToRound
                DUP;        # @storage : @storage : @parameter%donateToRound
                DUG 2;      # @storage : @parameter%donateToRound : @storage
                DUP;        # @storage : @storage : @parameter%donateToRound : @storage
                CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : @parameter%donateToRound : @storage
                SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                CDR;        # pair (option %roundManager address) (option %token address) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound : @storage
                DIG 7;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                IF_SOME
                  {}
                  {
                    PUSH int 883; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                    FAILWITH;   # FAILED
                  }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                DUP;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CAR;        # int : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CDR;        # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                DUP;        # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CDR;        # timestamp : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                SWAP;       # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                CAR;        # map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                SENDER;     # address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%donateToRound
                DIG 12;     # @parameter%donateToRound : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                AMOUNT;     # mutez : @parameter%donateToRound : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR %amount %name; # pair (mutez %amount) (@parameter%donateToRound %name) : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SOME;       # option (pair (mutez %amount) (@parameter%donateToRound %name)) : address : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # address : option (pair (mutez %amount) (@parameter%donateToRound %name)) : map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                UPDATE;     # map address (pair (mutez %amount) (string %name)) : timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (map address (pair (mutez %amount) (string %name))) timestamp : int : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # int : pair (map address (pair (mutez %amount) (string %name))) timestamp : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                # self.data.newRoundProposals[self.data.newRoundProposalId].totalFunds += sp.amount # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # pair (option %roundManager address) (option %token address) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # nat : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DIG 6;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                IF_SOME
                  {}
                  {
                    PUSH int 887; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDR;        # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CAR;        # pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # pair (mutez %totalFunds) (map %voters address nat) : pair (mutez %totalFunds) (map %voters address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDR;        # map address nat : pair (mutez %totalFunds) (map %voters address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CAR;        # mutez : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                AMOUNT;     # mutez : mutez : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                ADD;        # mutez : map address nat : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair mutez (map address nat) : pair (nat %votesNo) (nat %votesYes) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp) : pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                NIL operation; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # == executeNewRoundProposal ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%executeNewRoundProposal : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%executeNewRoundProposal : @storage
                    MEM;        # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {
                        PUSH nat 0; # nat : @parameter%executeNewRoundProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%executeNewRoundProposal
                        DUG 3;      # @storage : nat : @parameter%executeNewRoundProposal : @storage
                        CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeNewRoundProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeNewRoundProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%executeNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:809 # @some : nat : @parameter%executeNewRoundProposal : @storage
                          }
                          {
                            PUSH int 809; # int : nat : @parameter%executeNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%executeNewRoundProposal : @storage
                        CDR;        # nat : nat : @parameter%executeNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                        GT;         # bool : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%executeNewRoundProposal : @storage
                      }; # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # sp.verify(self.data.newRoundProposalActive) # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                    CDADDR;     # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposalActive"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # sp.verify(sp.now > self.data.newRoundProposals[self.data.newRoundProposalId].expiry) # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:816 # @some : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 816; # int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%executeNewRoundProposal : @storage
                    CADAR;      # timestamp : @parameter%executeNewRoundProposal : @storage
                    NOW;        # timestamp : timestamp : @parameter%executeNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                    GT;         # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now > self.data.newRoundProposals[self.data.newRoundProposalId].expiry"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0) # @parameter%executeNewRoundProposal : @storage
                    PUSH int 0; # int : @parameter%executeNewRoundProposal : @storage
                    DIG 2;      # @storage : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : int : @parameter%executeNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:816 # @some : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 816; # int : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%executeNewRoundProposal : @storage
                    CDAAR;      # int : int : @parameter%executeNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                    EQ;         # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0"; # string : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%executeNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%executeNewRoundProposal
                    # if (((self.data.newRoundProposals[self.data.newRoundProposalId].votesYes * self.data.newRoundProposals[self.data.newRoundProposalId].votesYes) - (self.data.newRoundProposals[self.data.newRoundProposalId].votesNo * self.data.newRoundProposals[self.data.newRoundProposalId].votesNo)) > self.data.minimumVoteDifference) & (sp.len(self.data.newRoundProposals[self.data.newRoundProposalId].voters) >= self.data.minNewRoundProposalVotes): # @storage : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                    CDADAR;     # int : @storage : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : int : @parameter%executeNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:816 # @some : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 816; # int : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%executeNewRoundProposal : @storage
                    CDDDAR;     # nat : int : @parameter%executeNewRoundProposal : @storage
                    DIG 3;      # @storage : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : nat : int : @parameter%executeNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUG 5;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:816 # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 816; # int : nat : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDDAR;     # nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    MUL;        # nat : int : @parameter%executeNewRoundProposal : @storage
                    DIG 3;      # @storage : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : nat : int : @parameter%executeNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal
                    DUG 5;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:816 # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 816; # int : nat : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDDDR;     # nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    DIG 4;      # @storage : nat : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : nat : nat : int : @parameter%executeNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : nat : int : @parameter%executeNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:816 # @some : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH int 816; # int : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    CDDDDR;     # nat : nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    MUL;        # nat : nat : int : @parameter%executeNewRoundProposal : @storage
                    SUB;        # int : int : @parameter%executeNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                    GT;         # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                        CDAAR;      # nat : @storage : @parameter%executeNewRoundProposal
                        SWAP;       # @storage : nat : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%executeNewRoundProposal
                        CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : nat : @parameter%executeNewRoundProposal
                        SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal
                        DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal : @storage
                        CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal : @storage
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : @parameter%executeNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:816 # @some : nat : @parameter%executeNewRoundProposal : @storage
                          }
                          {
                            PUSH int 816; # int : nat : @parameter%executeNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%executeNewRoundProposal : @storage
                        CDDADR;     # map address nat : nat : @parameter%executeNewRoundProposal : @storage
                        SIZE;       # nat : nat : @parameter%executeNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%executeNewRoundProposal : @storage
                        GE;         # bool : @parameter%executeNewRoundProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%executeNewRoundProposal : @storage
                      }; # bool : @parameter%executeNewRoundProposal : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%executeNewRoundProposal
                        # self.data.newRoundProposals[self.data.newRoundProposalId].resolved = 1 # @storage : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                        DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (option %roundManager address) (option %token address) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DIG 7;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 824; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CADR;       # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PUSH int 1; # int : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%executeNewRoundProposal
                        SWAP;       # @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }
                      {
                        SWAP;       # @storage : @parameter%executeNewRoundProposal
                        # self.data.newRoundProposals[self.data.newRoundProposalId].resolved = -1 # @storage : @parameter%executeNewRoundProposal
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal
                        DUG 2;      # @storage : @parameter%executeNewRoundProposal : @storage
                        DUP;        # @storage : @storage : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # pair (option %roundManager address) (option %token address) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal : @storage
                        DIG 7;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 826; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        CADR;       # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PUSH int -1; # int : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%executeNewRoundProposal
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%executeNewRoundProposal
                        SWAP;       # @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }; # @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    # for voter in self.data.newRoundProposals[self.data.newRoundProposalId].voters.keys(): ... # @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    NIL operation; # list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DIG 2;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%executeNewRoundProposal
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%executeNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%executeNewRoundProposal
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal
                    DUG 4;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    IF_SOME
                      {
                        # of_some: Get-item:816 # @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }
                      {
                        PUSH int 816; # int : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDDADR;     # map address nat : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    ITER
                      {
                        CAR;        # address : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        SWAP;       # list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        # sp.transfer(sp.record(from_ = sp.to_address(sp.self), to_ = voter, value = self.data.newRoundProposals[self.data.newRoundProposalId].voters[voter]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 3;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : address : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : address : @parameter%executeNewRoundProposal
                        DUG 4;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CDDDDR;     # option address : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {}
                          {
                            PUSH int 843; # int : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {}
                          {
                            PUSH int 837; # int : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PUSH mutez 0; # mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 5;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal
                        DUG 7;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {
                            # of_some: Get-item:816 # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                          }
                          {
                            PUSH int 816; # int : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CDDADR;     # map address nat : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 4;      # address : map address nat : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DUP;        # address : address : map address nat : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DUG 5;      # address : map address nat : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        GET;        # option nat : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {
                            # of_some: Get-item:834 # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                          }
                          {
                            PUSH int 834; # int : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 4;      # address : @some : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PAIR %to_ %value; # pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        ADDRESS;    # address : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (@some %value)) : mutez : @some : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CONS;       # list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }; # list operation : @parameter%executeNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # @parameter%executeNewRoundProposal : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DROP;       # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    # self.data.newRoundProposalActive = False # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDR;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CAR;        # nat : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDAR;       # int : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PUSH bool False; # bool : int : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # int : bool : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair int bool : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # nat : pair int bool : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair nat (pair int bool) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    SWAP;       # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }
                  {
                    DROP;       # @storage
                    # == listNewRound ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage
                    DUP;        # @storage : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    MEM;        # bool : @storage
                    IF
                      {
                        DUP;        # @storage : @storage
                        CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        PUSH nat 0; # nat : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:898 # @some : nat : @storage
                          }
                          {
                            PUSH int 898; # int : nat : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @storage
                        CDR;        # nat : nat : @storage
                        COMPARE;    # int : @storage
                        GT;         # bool : @storage
                      }
                      {
                        PUSH bool False; # bool : @storage
                      }; # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(self.data.currentOnGoingRoundProposalId == -1) # @storage
                    DUP;        # @storage : @storage
                    CAADAR;     # int : @storage
                    PUSH int -1; # int : int : @storage
                    COMPARE;    # int : @storage
                    EQ;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.currentOnGoingRoundProposalId == -1"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1) # @storage
                    PUSH int 1; # int : @storage
                    SWAP;       # @storage : int
                    DUP;        # @storage : @storage : int
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:905 # @some : int : @storage
                      }
                      {
                        PUSH int 905; # int : int : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @storage
                    CDAAR;      # int : int : @storage
                    COMPARE;    # int : @storage
                    EQ;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 1"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(~ self.data.newRoundProposals[self.data.newRoundProposalId].listed) # @storage
                    DUP;        # @storage : @storage
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUG 2;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:905 # @some : @storage
                      }
                      {
                        PUSH int 905; # int : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @storage
                    CADDAR;     # bool : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ self.data.newRoundProposals[self.data.newRoundProposalId].listed"; # string : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @storage
                    # sp.transfer(sp.record(end = self.data.newRoundProposals[self.data.newRoundProposalId].end, name = self.data.newRoundProposals[self.data.newRoundProposalId].name, sponsors = self.data.newRoundProposals[self.data.newRoundProposalId].sponsorToFunds, start = self.data.newRoundProposals[self.data.newRoundProposalId].start, totalSponsorship = self.data.newRoundProposals[self.data.newRoundProposalId].totalFunds), sp.tez(0), sp.contract(sp.TRecord(end = sp.TTimestamp, name = sp.TString, sponsors = sp.TMap(sp.TAddress, sp.TRecord(amount = sp.TMutez, name = sp.TString).layout(("amount", "name"))), start = sp.TTimestamp, totalSponsorship = sp.TMutez).layout((("end", "name"), ("sponsors", ("start", "totalSponsorship")))), self.data.roundManager.open_some(), entry_point='createNewRound').open_some()) # @storage
                    DUP;        # @storage : @storage
                    CDDDAR;     # option address : @storage
                    NIL operation; # list operation : option address : @storage
                    SWAP;       # option address : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 937; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    CONTRACT %createNewRound (pair (pair (timestamp %end) (string %name)) (pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)))); # option (contract (pair (pair (timestamp %end) (string %name)) (pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship))))) : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 923; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @storage
                    DIG 3;      # @storage : mutez : @some : list operation
                    DUP;        # @storage : @storage : mutez : @some : list operation
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation
                    DUG 5;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:905 # @some : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 905; # int : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : @some : list operation : @storage
                    CDDAAR;     # mutez : mutez : @some : list operation : @storage
                    DIG 4;      # @storage : mutez : mutez : @some : list operation
                    DUP;        # @storage : @storage : mutez : mutez : @some : list operation
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : mutez : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : mutez : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:905 # @some : mutez : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 905; # int : mutez : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : mutez : mutez : @some : list operation : @storage
                    CDADDR;     # timestamp : mutez : mutez : @some : list operation : @storage
                    PAIR %start %totalSponsorship; # pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    DIG 4;      # @storage : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    DUP;        # @storage : @storage : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:905 # @some : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 905; # int : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    CDADAR;     # map address (pair (mutez %amount) (string %name)) : pair (timestamp %start) (mutez %totalSponsorship) : mutez : @some : list operation : @storage
                    PAIR %sponsors; # pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    DIG 4;      # @storage : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUG 6;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:905 # @some : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 905; # int : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CADDDR;     # string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    DIG 5;      # @storage : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation
                    DUG 7;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:905 # @some : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                      }
                      {
                        PUSH int 905; # int : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    CAADDR;     # timestamp : string : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    PAIR %end %name; # pair (timestamp %end) (string %name) : pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship)) : mutez : @some : list operation : @storage
                    PAIR;       # pair (pair (timestamp %end) (string %name)) (pair (map %sponsors address (pair (mutez %amount) (string %name))) (pair (timestamp %start) (mutez %totalSponsorship))) : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                    SWAP;       # @storage : list operation
                    # self.data.newRoundProposals[self.data.newRoundProposalId].listed = True # @storage : list operation
                    DUP;        # @storage : @storage : list operation
                    DUG 2;      # @storage : list operation : @storage
                    DUP;        # @storage : @storage : list operation : @storage
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : list operation : @storage
                    SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    CDR;        # pair (option %roundManager address) (option %token address) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation : @storage
                    DIG 7;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    IF_SOME
                      {}
                      {
                        PUSH int 943; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                        FAILWITH;   # FAILED
                      }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # @some : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CAR;        # pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDR;        # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CAR;        # timestamp : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDDR;       # string : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PUSH bool True; # bool : string : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair bool string : timestamp : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # timestamp : pair bool string : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair timestamp (pair bool string) : pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair timestamp (pair bool string) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    # self.data.newRoundProposalActive = False # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDR;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    DUP;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CAR;        # nat : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    CDAR;       # int : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PUSH bool False; # bool : int : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # int : bool : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair int bool : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # nat : pair int bool : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair nat (pair int bool) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    PAIR;       # pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : list operation
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    # self.data.currentOnGoingRoundProposalId = sp.to_int(self.data.newRoundProposalId) # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    DUG 2;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDR;        # pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CAR;        # address : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDDR;       # nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DIG 5;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CDDAAR;     # nat : nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    INT;        # int : nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair int nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # address : pair int nat : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair address (pair int nat) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    # self.data.disputes = {} # pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    DUP;        # pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    CDR;        # pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    SWAP;       # pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CAR;        # pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    DUP;        # pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CAR;        # pair address (pair int nat) : pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CADR;       # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    EMPTY_MAP nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))); # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair address (pair int nat) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # pair address (pair int nat) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair address (pair int nat)) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (pair address (pair int nat)) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    SWAP;       # list operation : pair (pair (pair address (pair int nat)) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair timestamp (pair bool string))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
              }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
          }
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%proposeNewRound
                # == proposeNewRound ==
                # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%proposeNewRound
                DUP;        # @storage : @storage : @parameter%proposeNewRound
                DUG 2;      # @storage : @parameter%proposeNewRound : @storage
                CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%proposeNewRound : @storage
                SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%proposeNewRound : @storage
                MEM;        # bool : @parameter%proposeNewRound : @storage
                IF
                  {
                    PUSH nat 0; # nat : @parameter%proposeNewRound : @storage
                    DIG 2;      # @storage : nat : @parameter%proposeNewRound
                    DUP;        # @storage : @storage : nat : @parameter%proposeNewRound
                    DUG 3;      # @storage : nat : @parameter%proposeNewRound : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeNewRound : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeNewRound : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%proposeNewRound : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:725 # @some : nat : @parameter%proposeNewRound : @storage
                      }
                      {
                        PUSH int 725; # int : nat : @parameter%proposeNewRound : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%proposeNewRound : @storage
                    CDR;        # nat : nat : @parameter%proposeNewRound : @storage
                    COMPARE;    # int : @parameter%proposeNewRound : @storage
                    GT;         # bool : @parameter%proposeNewRound : @storage
                  }
                  {
                    PUSH bool False; # bool : @parameter%proposeNewRound : @storage
                  }; # bool : @parameter%proposeNewRound : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%proposeNewRound : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%proposeNewRound : @storage
                SWAP;       # @storage : @parameter%proposeNewRound
                # sp.verify(~ self.data.newRoundProposalActive) # @storage : @parameter%proposeNewRound
                DUP;        # @storage : @storage : @parameter%proposeNewRound
                DUG 2;      # @storage : @parameter%proposeNewRound : @storage
                CDADDR;     # bool : @parameter%proposeNewRound : @storage
                IF
                  {
                    PUSH string "WrongCondition: ~ self.data.newRoundProposalActive"; # string : @parameter%proposeNewRound : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%proposeNewRound : @storage
                # sp.verify(params.endTime > params.startTime) # @parameter%proposeNewRound : @storage
                DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : @storage
                CDDR;       # timestamp : @parameter%proposeNewRound : @storage
                SWAP;       # @parameter%proposeNewRound : timestamp : @storage
                DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : timestamp : @storage
                DUG 2;      # @parameter%proposeNewRound : timestamp : @parameter%proposeNewRound : @storage
                CAAR;       # timestamp : timestamp : @parameter%proposeNewRound : @storage
                COMPARE;    # int : @parameter%proposeNewRound : @storage
                GT;         # bool : @parameter%proposeNewRound : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: params.endTime > params.startTime"; # string : @parameter%proposeNewRound : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%proposeNewRound : @storage
                # sp.verify(params.startTime > params.expiry) # @parameter%proposeNewRound : @storage
                DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : @storage
                CADR;       # timestamp : @parameter%proposeNewRound : @storage
                SWAP;       # @parameter%proposeNewRound : timestamp : @storage
                DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : timestamp : @storage
                DUG 2;      # @parameter%proposeNewRound : timestamp : @parameter%proposeNewRound : @storage
                CDDR;       # timestamp : timestamp : @parameter%proposeNewRound : @storage
                COMPARE;    # int : @parameter%proposeNewRound : @storage
                GT;         # bool : @parameter%proposeNewRound : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: params.startTime > params.expiry"; # string : @parameter%proposeNewRound : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%proposeNewRound : @storage
                SWAP;       # @storage : @parameter%proposeNewRound
                # self.data.newRoundProposalId += 1 # @storage : @parameter%proposeNewRound
                DUP;        # @storage : @storage : @parameter%proposeNewRound
                CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : @parameter%proposeNewRound
                SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CDR;        # pair (option %roundManager address) (option %token address) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CAR;        # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PUSH nat 1; # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                ADD;        # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%proposeNewRound
                PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%proposeNewRound
                # self.data.newRoundProposals[self.data.newRoundProposalId] = sp.record(created = sp.now, creator = sp.sender, end = params.endTime, expiry = params.expiry, listed = False, name = params.name, resolved = 0, sponsorToFunds = {}, start = params.startTime, totalFunds = sp.tez(0), voters = {}, votesNo = 0, votesYes = 0) # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%proposeNewRound
                DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%proposeNewRound
                DUG 2;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # pair (option %roundManager address) (option %token address) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # nat : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DIG 6;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PUSH (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) (Pair (Pair 0 {}) (Pair 0 0)); # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                DIG 7;      # @parameter%proposeNewRound : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUG 8;      # @parameter%proposeNewRound : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CDDR;       # timestamp : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                EMPTY_MAP address (pair (mutez %amount) (string %name)); # map address (pair (mutez %amount) (string %name)) : timestamp : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR %sponsorToFunds %start; # pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PUSH int 0; # int : pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR %resolved; # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                DIG 7;      # @parameter%proposeNewRound : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUG 8;      # @parameter%proposeNewRound : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CDAR;       # string : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PUSH bool False; # bool : string : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR %listed %name; # pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                DIG 8;      # @parameter%proposeNewRound : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # @parameter%proposeNewRound : @parameter%proposeNewRound : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUG 9;      # @parameter%proposeNewRound : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                CADR;       # timestamp : pair (bool %listed) (string %name) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                PAIR %expiry; # pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%proposeNewRound
                DIG 8;      # @parameter%proposeNewRound : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CAAR;       # timestamp : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SENDER;     # address : timestamp : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR %creator %end; # pair (address %creator) (timestamp %end) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                NOW;        # timestamp : pair (address %creator) (timestamp %end) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR %created; # pair (timestamp %created) (pair (address %creator) (timestamp %end)) : pair (timestamp %expiry) (pair (bool %listed) (string %name)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                # self.data.newRoundProposalActive = True # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDR;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                DUP;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CAR;        # nat : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                CDAR;       # int : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PUSH bool True; # bool : int : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # int : bool : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair int bool : nat : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # nat : pair int bool : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair nat (pair int bool) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                NIL operation; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%raiseDispute
                    # == raiseDispute ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > self.data.disputeFee)) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    DUG 2;      # @storage : @parameter%raiseDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    MEM;        # bool : @parameter%raiseDispute : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%raiseDispute
                        DUP;        # @storage : @storage : @parameter%raiseDispute
                        CAADDR;     # nat : @storage : @parameter%raiseDispute
                        SWAP;       # @storage : nat : @parameter%raiseDispute
                        DUP;        # @storage : @storage : nat : @parameter%raiseDispute
                        DUG 3;      # @storage : nat : @parameter%raiseDispute : @storage
                        CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1014 # @some : nat : @parameter%raiseDispute : @storage
                          }
                          {
                            PUSH int 1014; # int : nat : @parameter%raiseDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%raiseDispute : @storage
                        CDR;        # nat : nat : @parameter%raiseDispute : @storage
                        COMPARE;    # int : @parameter%raiseDispute : @storage
                        GT;         # bool : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%raiseDispute : @storage
                      }; # bool : @parameter%raiseDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > self.data.disputeFee)"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%raiseDispute : @storage
                    SWAP;       # @storage : @parameter%raiseDispute
                    # sp.verify(~ (self.data.disputes.contains(params.entryId))) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    DUG 2;      # @storage : @parameter%raiseDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%raiseDispute : @storage
                    SWAP;       # @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%raiseDispute : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%raiseDispute : @storage
                    MEM;        # bool : @parameter%raiseDispute : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ (self.data.disputes.contains(params.entryId))"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%raiseDispute : @storage
                    SWAP;       # @storage : @parameter%raiseDispute
                    # sp.verify(self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    DUG 2;      # @storage : @parameter%raiseDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%raiseDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1021 # @some : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH int 1021; # int : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%raiseDispute : @storage
                    CAR;        # map address nat : @parameter%raiseDispute : @storage
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : map address nat : @parameter%raiseDispute : @storage
                    ADDRESS;    # address : map address nat : @parameter%raiseDispute : @storage
                    MEM;        # bool : @parameter%raiseDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%raiseDispute : @storage
                    SWAP;       # @storage : @parameter%raiseDispute
                    # sp.verify(self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= self.data.disputeFee) # @storage : @parameter%raiseDispute
                    DUP;        # @storage : @storage : @parameter%raiseDispute
                    CAADDR;     # nat : @storage : @parameter%raiseDispute
                    SWAP;       # @storage : nat : @parameter%raiseDispute
                    DUP;        # @storage : @storage : nat : @parameter%raiseDispute
                    DUG 3;      # @storage : nat : @parameter%raiseDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%raiseDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1023 # @some : nat : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH int 1023; # int : nat : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%raiseDispute : @storage
                    CAR;        # map address nat : nat : @parameter%raiseDispute : @storage
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : map address nat : nat : @parameter%raiseDispute : @storage
                    ADDRESS;    # address : map address nat : nat : @parameter%raiseDispute : @storage
                    GET;        # option nat : nat : @parameter%raiseDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1023 # @some : nat : @parameter%raiseDispute : @storage
                      }
                      {
                        PUSH int 1023; # int : nat : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%raiseDispute : @storage
                    COMPARE;    # int : @parameter%raiseDispute : @storage
                    GE;         # bool : @parameter%raiseDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= self.data.disputeFee"; # string : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%raiseDispute : @storage
                    # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.to_address(sp.self), value = self.data.disputeFee), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # @parameter%raiseDispute : @storage
                    NIL operation; # list operation : @parameter%raiseDispute : @storage
                    DIG 2;      # @storage : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : list operation : @parameter%raiseDispute
                    DUG 3;      # @storage : list operation : @parameter%raiseDispute : @storage
                    CDDDDR;     # option address : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 843; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1028; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%raiseDispute : @storage
                    DIG 4;      # @storage : mutez : @some : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : mutez : @some : list operation : @parameter%raiseDispute
                    DUG 5;      # @storage : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    CAADDR;     # nat : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : nat : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    ADDRESS;    # address : nat : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    SENDER;     # address : pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%raiseDispute : @storage
                    CONS;       # list operation : @parameter%raiseDispute : @storage
                    # sp.transfer(sp.record(entryId = params.entryId), sp.tez(0), sp.contract(sp.TRecord(entryId = sp.TNat).layout("entryId"), self.data.roundManager.open_some(), entry_point='dispute').open_some()) # list operation : @parameter%raiseDispute : @storage
                    DIG 2;      # @storage : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : list operation : @parameter%raiseDispute
                    DUG 3;      # @storage : list operation : @parameter%raiseDispute : @storage
                    CDDDAR;     # option address : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 937; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    CONTRACT %dispute nat; # option (contract nat) : list operation : @parameter%raiseDispute : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 1054; # int : list operation : @parameter%raiseDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%raiseDispute : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%raiseDispute : @storage
                    DIG 3;      # @parameter%raiseDispute : mutez : @some : list operation : @storage
                    DUP;        # @parameter%raiseDispute : @parameter%raiseDispute : mutez : @some : list operation : @storage
                    DUG 4;      # @parameter%raiseDispute : mutez : @some : list operation : @parameter%raiseDispute : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%raiseDispute : @storage
                    CONS;       # list operation : @parameter%raiseDispute : @storage
                    # self.data.disputes[params.entryId] = sp.record(disputer = sp.sender, expiry = sp.add_seconds(sp.now, 500), resolved = 0, voters = {}, votesNo = 0, votesYes = 0) # list operation : @parameter%raiseDispute : @storage
                    DIG 2;      # @storage : list operation : @parameter%raiseDispute
                    DUP;        # @storage : @storage : list operation : @parameter%raiseDispute
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : list operation : @parameter%raiseDispute
                    SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%raiseDispute
                    DIG 6;      # @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PUSH (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) (Pair {} (Pair 0 0)); # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PUSH int 0; # int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    NOW;        # timestamp : int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PUSH int 500; # int : timestamp : int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    ADD;        # timestamp : int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR %expiry %resolved; # pair (timestamp %expiry) (int %resolved) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SENDER;     # address : pair (timestamp %expiry) (int %resolved) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR %disputer; # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%raiseDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # @parameter%raiseDispute : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    SWAP;       # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }
                  {
                    SWAP;       # @storage : @parameter%setRoundManagerContract
                    # == setRoundManagerContract ==
                    # sp.verify(~ self.data.roundManager.is_some()) # @storage : @parameter%setRoundManagerContract
                    DUP;        # @storage : @storage : @parameter%setRoundManagerContract
                    DUG 2;      # @storage : @parameter%setRoundManagerContract : @storage
                    CDDDAR;     # option address : @parameter%setRoundManagerContract : @storage
                    IF_SOME
                      {
                        PUSH string "WrongCondition: ~ self.data.roundManager.is_some()"; # string : @some : @parameter%setRoundManagerContract : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%setRoundManagerContract : @storage
                    SWAP;       # @storage : @parameter%setRoundManagerContract
                    # sp.verify(sp.sender == self.data.admin) # @storage : @parameter%setRoundManagerContract
                    DUP;        # @storage : @storage : @parameter%setRoundManagerContract
                    DUG 2;      # @storage : @parameter%setRoundManagerContract : @storage
                    CAAAR;      # address : @parameter%setRoundManagerContract : @storage
                    SENDER;     # address : address : @parameter%setRoundManagerContract : @storage
                    COMPARE;    # int : @parameter%setRoundManagerContract : @storage
                    EQ;         # bool : @parameter%setRoundManagerContract : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%setRoundManagerContract : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setRoundManagerContract : @storage
                    SWAP;       # @storage : @parameter%setRoundManagerContract
                    # self.data.roundManager = sp.some(params._roundManager) # @storage : @parameter%setRoundManagerContract
                    DUP;        # @storage : @storage : @parameter%setRoundManagerContract
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : @parameter%setRoundManagerContract
                    SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    CDDR;       # option address : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setRoundManagerContract
                    DIG 4;      # @parameter%setRoundManagerContract : option address : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    SOME;       # option address : option address : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    PAIR;       # pair (option address) (option address) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option address) (option address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    PAIR;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address)))
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))))
                    NIL operation; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))))
                  }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
              }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair nat (pair int bool)) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
          }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%setTokenContract
                # == setTokenContract ==
                # sp.verify(sp.sender == self.data.admin) # @storage : @parameter%setTokenContract
                DUP;        # @storage : @storage : @parameter%setTokenContract
                DUG 2;      # @storage : @parameter%setTokenContract : @storage
                CAAAR;      # address : @parameter%setTokenContract : @storage
                SENDER;     # address : address : @parameter%setTokenContract : @storage
                COMPARE;    # int : @parameter%setTokenContract : @storage
                EQ;         # bool : @parameter%setTokenContract : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%setTokenContract : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%setTokenContract : @storage
                SWAP;       # @storage : @parameter%setTokenContract
                # sp.verify(~ self.data.token.is_some()) # @storage : @parameter%setTokenContract
                DUP;        # @storage : @storage : @parameter%setTokenContract
                DUG 2;      # @storage : @parameter%setTokenContract : @storage
                CDDDDR;     # option address : @parameter%setTokenContract : @storage
                IF_SOME
                  {
                    PUSH string "WrongCondition: ~ self.data.token.is_some()"; # string : @some : @parameter%setTokenContract : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%setTokenContract : @storage
                SWAP;       # @storage : @parameter%setTokenContract
                # self.data.token = sp.some(params) # @storage : @parameter%setTokenContract
                DUP;        # @storage : @storage : @parameter%setTokenContract
                CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : @parameter%setTokenContract
                SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                CDAR;       # option address : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%setTokenContract
                DIG 4;      # @parameter%setTokenContract : option address : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SOME;       # option address : option address : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # option address : option address : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (option address) (option address) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option address) (option address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address)))
                PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))))
                NIL operation; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%settleDispute
                    # == settleDispute ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%settleDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%settleDispute : @storage
                    MEM;        # bool : @parameter%settleDispute : @storage
                    IF
                      {
                        PUSH nat 0; # nat : @parameter%settleDispute : @storage
                        DIG 2;      # @storage : nat : @parameter%settleDispute
                        DUP;        # @storage : @storage : nat : @parameter%settleDispute
                        DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                        CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%settleDispute : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%settleDispute : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%settleDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1144 # @some : nat : @parameter%settleDispute : @storage
                          }
                          {
                            PUSH int 1144; # int : nat : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%settleDispute : @storage
                        CDR;        # nat : nat : @parameter%settleDispute : @storage
                        COMPARE;    # int : @parameter%settleDispute : @storage
                        GT;         # bool : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%settleDispute : @storage
                      }; # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    SWAP;       # @storage : @parameter%settleDispute
                    # sp.verify(self.data.disputes.contains(params.entryId)) # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    SWAP;       # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    MEM;        # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.disputes.contains(params.entryId)"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    SWAP;       # @storage : @parameter%settleDispute
                    # sp.verify(sp.now > self.data.disputes[params.entryId].expiry) # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    SWAP;       # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1149 # @some : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1149; # int : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%settleDispute : @storage
                    CADAR;      # timestamp : @parameter%settleDispute : @storage
                    NOW;        # timestamp : timestamp : @parameter%settleDispute : @storage
                    COMPARE;    # int : @parameter%settleDispute : @storage
                    GT;         # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now > self.data.disputes[params.entryId].expiry"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    # sp.verify(self.data.disputes[params.entryId].resolved == 0) # @parameter%settleDispute : @storage
                    PUSH int 0; # int : @parameter%settleDispute : @storage
                    DIG 2;      # @storage : int : @parameter%settleDispute
                    DUP;        # @storage : @storage : int : @parameter%settleDispute
                    DUG 3;      # @storage : int : @parameter%settleDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%settleDispute : @storage
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @storage
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : int : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1149 # @some : int : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1149; # int : int : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%settleDispute : @storage
                    CADDR;      # int : int : @parameter%settleDispute : @storage
                    COMPARE;    # int : @parameter%settleDispute : @storage
                    EQ;         # bool : @parameter%settleDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.disputes[params.entryId].resolved == 0"; # string : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%settleDispute : @storage
                    SWAP;       # @storage : @parameter%settleDispute
                    # if ((self.data.disputes[params.entryId].votesYes * self.data.disputes[params.entryId].votesYes) > (self.data.disputes[params.entryId].votesNo * self.data.disputes[params.entryId].votesNo)) & ((self.data.disputes[params.entryId].votesYes * self.data.disputes[params.entryId].votesYes) > self.data.minDisputeSettleVotes): # @storage : @parameter%settleDispute
                    DUP;        # @storage : @storage : @parameter%settleDispute
                    DUG 2;      # @storage : @parameter%settleDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    SWAP;       # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1149 # @some : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1149; # int : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%settleDispute : @storage
                    CDDAR;      # nat : @parameter%settleDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%settleDispute
                    DUP;        # @storage : @storage : nat : @parameter%settleDispute
                    DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1149 # @some : nat : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1149; # int : nat : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%settleDispute : @storage
                    CDDAR;      # nat : nat : @parameter%settleDispute : @storage
                    MUL;        # nat : @parameter%settleDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%settleDispute
                    DUP;        # @storage : @storage : nat : @parameter%settleDispute
                    DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1149 # @some : nat : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1149; # int : nat : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%settleDispute : @storage
                    CDDDR;      # nat : nat : @parameter%settleDispute : @storage
                    DIG 3;      # @storage : nat : nat : @parameter%settleDispute
                    DUP;        # @storage : @storage : nat : nat : @parameter%settleDispute
                    DUG 4;      # @storage : nat : nat : @parameter%settleDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                    DIG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                    DUG 4;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1149 # @some : nat : nat : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH int 1149; # int : nat : nat : @parameter%settleDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : nat : @parameter%settleDispute : @storage
                    CDDDR;      # nat : nat : nat : @parameter%settleDispute : @storage
                    MUL;        # nat : nat : @parameter%settleDispute : @storage
                    COMPARE;    # int : @parameter%settleDispute : @storage
                    GT;         # bool : @parameter%settleDispute : @storage
                    IF
                      {
                        SWAP;       # @storage : @parameter%settleDispute
                        DUP;        # @storage : @storage : @parameter%settleDispute
                        CADDAR;     # nat : @storage : @parameter%settleDispute
                        SWAP;       # @storage : nat : @parameter%settleDispute
                        DUP;        # @storage : @storage : nat : @parameter%settleDispute
                        DUG 3;      # @storage : nat : @parameter%settleDispute : @storage
                        CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                        DIG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @storage
                        DUG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : @parameter%settleDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1149 # @some : nat : @parameter%settleDispute : @storage
                          }
                          {
                            PUSH int 1149; # int : nat : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%settleDispute : @storage
                        CDDDR;      # nat : nat : @parameter%settleDispute : @storage
                        DIG 3;      # @storage : nat : nat : @parameter%settleDispute
                        DUP;        # @storage : @storage : nat : nat : @parameter%settleDispute
                        DUG 4;      # @storage : nat : nat : @parameter%settleDispute : @storage
                        CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                        DIG 3;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @storage
                        DUG 4;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : nat : @parameter%settleDispute : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:1149 # @some : nat : nat : @parameter%settleDispute : @storage
                          }
                          {
                            PUSH int 1149; # int : nat : nat : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : nat : @parameter%settleDispute : @storage
                        CDDDR;      # nat : nat : nat : @parameter%settleDispute : @storage
                        MUL;        # nat : nat : @parameter%settleDispute : @storage
                        COMPARE;    # int : @parameter%settleDispute : @storage
                        GT;         # bool : @parameter%settleDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%settleDispute : @storage
                      }; # bool : @parameter%settleDispute : @storage
                    IF
                      {
                        # sp.transfer(sp.record(entryId = params.entryId), sp.tez(0), sp.contract(sp.TRecord(entryId = sp.TNat).layout("entryId"), self.data.roundManager.open_some(), entry_point='disqualify').open_some()) # @parameter%settleDispute : @storage
                        NIL operation; # list operation : @parameter%settleDispute : @storage
                        DIG 2;      # @storage : list operation : @parameter%settleDispute
                        DUP;        # @storage : @storage : list operation : @parameter%settleDispute
                        DUG 3;      # @storage : list operation : @parameter%settleDispute : @storage
                        CDDDAR;     # option address : list operation : @parameter%settleDispute : @storage
                        IF_SOME
                          {}
                          {
                            PUSH int 937; # int : list operation : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : @storage
                        CONTRACT %disqualify nat; # option (contract nat) : list operation : @parameter%settleDispute : @storage
                        IF_SOME
                          {}
                          {
                            PUSH int 1162; # int : list operation : @parameter%settleDispute : @storage
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : @storage
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%settleDispute : @storage
                        DIG 3;      # @parameter%settleDispute : mutez : @some : list operation : @storage
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : mutez : @some : list operation : @storage
                        DUG 4;      # @parameter%settleDispute : mutez : @some : list operation : @parameter%settleDispute : @storage
                        TRANSFER_TOKENS; # operation : list operation : @parameter%settleDispute : @storage
                        CONS;       # list operation : @parameter%settleDispute : @storage
                        # self.data.disputes[params.entryId].resolved = 1 # list operation : @parameter%settleDispute : @storage
                        DIG 2;      # @storage : list operation : @parameter%settleDispute
                        DUP;        # @storage : @storage : list operation : @parameter%settleDispute
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : list operation : @parameter%settleDispute
                        SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DIG 7;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                        DUG 8;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 1170; # int : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUP;        # @some : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # @some : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        DUP;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CAR;        # address : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        CDAR;       # timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PUSH int 1; # int : timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # timestamp : int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PAIR;       # pair timestamp int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # address : pair timestamp int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PAIR;       # pair address (pair timestamp int) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SOME;       # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # @parameter%settleDispute : option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        UPDATE;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation : @parameter%settleDispute
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%settleDispute
                        # sp.transfer(sp.record(from_ = sp.to_address(sp.self), to_ = sp.sender, value = self.data.disputeFee), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%settleDispute
                        DUG 3;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CDDDDR;     # option address : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {}
                          {
                            PUSH int 843; # int : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {}
                          {
                            PUSH int 1180; # int : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PUSH mutez 0; # mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 4;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : @parameter%settleDispute
                        DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : @parameter%settleDispute
                        DUG 5;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CAADDR;     # nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        SENDER;     # address : nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        ADDRESS;    # address : pair (address %to_) (nat %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CONS;       # list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }
                      {
                        SWAP;       # @storage : @parameter%settleDispute
                        # self.data.disputes[params.entryId].resolved = -1 # @storage : @parameter%settleDispute
                        DUP;        # @storage : @storage : @parameter%settleDispute
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : @parameter%settleDispute
                        SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DIG 6;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                        DUG 7;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUG 2;      # @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 1192; # int : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                            FAILWITH;   # FAILED
                          }; # @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUP;        # @some : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @some : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # @some : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        DUP;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CAR;        # address : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        CDAR;       # timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PUSH int -1; # int : timestamp : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # timestamp : int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PAIR;       # pair timestamp int : address : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # address : pair timestamp int : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PAIR;       # pair address (pair timestamp int) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PAIR;       # pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SOME;       # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%settleDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # @parameter%settleDispute : option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        UPDATE;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PAIR;       # pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PAIR;       # pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%settleDispute
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%settleDispute
                        SWAP;       # @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        NIL operation; # list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }; # list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    # for voter in self.data.disputes[params.entryId].voters.keys(): ... # list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DIG 2;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%settleDispute
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%settleDispute
                    DUG 3;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CADAAR;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DIG 2;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DUG 3;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    GET;        # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    IF_SOME
                      {
                        # of_some: Get-item:1149 # @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }
                      {
                        PUSH int 1149; # int : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDAR;       # map address nat : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    ITER
                      {
                        CAR;        # address : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        SWAP;       # list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        # sp.transfer(sp.record(from_ = sp.to_address(sp.self), to_ = voter, value = self.data.disputes[params.entryId].voters[voter]), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 3;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : address : @parameter%settleDispute
                        DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : address : @parameter%settleDispute
                        DUG 4;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CDDDDR;     # option address : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {}
                          {
                            PUSH int 843; # int : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {}
                          {
                            PUSH int 1203; # int : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PUSH mutez 0; # mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 5;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : address : @parameter%settleDispute
                        DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : address : @parameter%settleDispute
                        DUG 6;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CADAAR;     # map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 5;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DUP;        # @parameter%settleDispute : @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DUG 6;      # @parameter%settleDispute : map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        GET;        # option (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {
                            # of_some: Get-item:1149 # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                          }
                          {
                            PUSH int 1149; # int : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CDAR;       # map address nat : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 4;      # address : map address nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DUP;        # address : address : map address nat : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DUG 5;      # address : map address nat : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        GET;        # option nat : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        IF_SOME
                          {
                            # of_some: Get-item:1200 # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                          }
                          {
                            PUSH int 1200; # int : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                            FAILWITH;   # FAILED
                          }; # @some : mutez : @some : list operation : address : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        DIG 4;      # address : @some : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PAIR %to_ %value; # pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        ADDRESS;    # address : pair (address %to_) (@some %value) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        PAIR %from_; # pair (address %from_) (pair (address %to_) (@some %value)) : mutez : @some : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        TRANSFER_TOKENS; # operation : list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        CONS;       # list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }; # list operation : @parameter%settleDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # @parameter%settleDispute : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DROP;       # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }
                  {
                    DROP;       # @storage
                    # == settleRound ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage
                    DUP;        # @storage : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    MEM;        # bool : @storage
                    IF
                      {
                        DUP;        # @storage : @storage
                        CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        PUSH nat 0; # nat : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                        SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:960 # @some : nat : @storage
                          }
                          {
                            PUSH int 960; # int : nat : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @storage
                        CDR;        # nat : nat : @storage
                        COMPARE;    # int : @storage
                        GT;         # bool : @storage
                      }
                      {
                        PUSH bool False; # bool : @storage
                      }; # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(self.data.currentOnGoingRoundProposalId >= 0) # @storage
                    DUP;        # @storage : @storage
                    CAADAR;     # int : @storage
                    PUSH int 0; # int : int : @storage
                    SWAP;       # int : int : @storage
                    COMPARE;    # int : @storage
                    GE;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.currentOnGoingRoundProposalId >= 0"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.verify(sp.now > self.data.newRoundProposals[sp.as_nat(self.data.currentOnGoingRoundProposalId)].end) # @storage
                    DUP;        # @storage : @storage
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))
                    DUG 2;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    CAADAR;     # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    ISNAT;      # option nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 967; # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                        FAILWITH;   # FAILED
                      }; # @some : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:967 # @some : @storage
                      }
                      {
                        PUSH int 967; # int : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @storage
                    CAADDR;     # timestamp : @storage
                    NOW;        # timestamp : timestamp : @storage
                    COMPARE;    # int : @storage
                    GT;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now > self.data.newRoundProposals[sp.as_nat(self.data.currentOnGoingRoundProposalId)].end"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # sp.send(self.data.roundManager.open_some(), self.data.newRoundProposals[sp.as_nat(self.data.currentOnGoingRoundProposalId)].totalFunds) # @storage
                    DUP;        # @storage : @storage
                    CDDDAR;     # option address : @storage
                    NIL operation; # list operation : option address : @storage
                    SWAP;       # option address : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 937; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    CONTRACT %disburse unit; # option (contract unit) : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 978; # int : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @storage
                    DIG 2;      # @storage : @some : list operation
                    DUP;        # @storage : @storage : @some : list operation
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @some : list operation
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    CAADAR;     # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    ISNAT;      # option nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 974; # int : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @some : list operation : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:974 # @some : @some : list operation : @storage
                      }
                      {
                        PUSH int 974; # int : @some : list operation : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @some : list operation : @storage
                    CDDAAR;     # mutez : @some : list operation : @storage
                    UNIT;       # unit : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                    SWAP;       # @storage : list operation
                    # self.data.currentOnGoingRoundProposalId = -1 # @storage : list operation
                    DUP;        # @storage : @storage : list operation
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : list operation
                    SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    DUP;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CAR;        # address : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    CDDR;       # nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PUSH int -1; # int : nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair int nat : address : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    SWAP;       # address : pair int nat : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair address (pair int nat) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : list operation
                    PAIR;       # pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation
                    SWAP;       # list operation : pair (pair (pair address (pair int nat)) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair address (pair timestamp int)) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
              }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # @storage : @parameter%syncApproval
                    # == syncApproval ==
                    # sp.verify(sp.sender == self.data.token.open_some()) # @storage : @parameter%syncApproval
                    DUP;        # @storage : @storage : @parameter%syncApproval
                    DUG 2;      # @storage : @parameter%syncApproval : @storage
                    CDDDDR;     # option address : @parameter%syncApproval : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 843; # int : @parameter%syncApproval : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%syncApproval : @storage
                    SENDER;     # address : @some : @parameter%syncApproval : @storage
                    COMPARE;    # int : @parameter%syncApproval : @storage
                    EQ;         # bool : @parameter%syncApproval : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.token.open_some()"; # string : @parameter%syncApproval : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%syncApproval : @storage
                    SWAP;       # @storage : @parameter%syncApproval
                    # self.data.holders[params.owner].approvals[params.address] = params.value # @storage : @parameter%syncApproval
                    DUP;        # @storage : @storage : @parameter%syncApproval
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : @parameter%syncApproval
                    SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DIG 6;      # @parameter%syncApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUP;        # @parameter%syncApproval : @parameter%syncApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUG 7;      # @parameter%syncApproval : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CDAR;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    IF_SOME
                      {}
                      {
                        PUSH int 625; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DUP;        # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CDR;        # nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    SWAP;       # @some : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    CAR;        # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncApproval
                    DIG 8;      # @parameter%syncApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUP;        # @parameter%syncApproval : @parameter%syncApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    CAR;        # address : @parameter%syncApproval : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # @parameter%syncApproval : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    CDDR;       # nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SOME;       # option nat : address : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # address : option nat : map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    UPDATE;     # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (map address nat) nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    UPDATE;     # big_map address (pair (map address nat) nat) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map address nat) nat) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }
                  {
                    SWAP;       # @storage : @parameter%syncBalance
                    # == syncBalance ==
                    # sp.verify(sp.sender == self.data.token.open_some()) # @storage : @parameter%syncBalance
                    DUP;        # @storage : @storage : @parameter%syncBalance
                    DUG 2;      # @storage : @parameter%syncBalance : @storage
                    CDDDDR;     # option address : @parameter%syncBalance : @storage
                    IF_SOME
                      {}
                      {
                        PUSH int 843; # int : @parameter%syncBalance : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%syncBalance : @storage
                    SENDER;     # address : @some : @parameter%syncBalance : @storage
                    COMPARE;    # int : @parameter%syncBalance : @storage
                    EQ;         # bool : @parameter%syncBalance : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.token.open_some()"; # string : @parameter%syncBalance : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%syncBalance : @storage
                    SWAP;       # @storage : @parameter%syncBalance
                    # if ~ (self.data.holders.contains(params.address)): # @storage : @parameter%syncBalance
                    DUP;        # @storage : @storage : @parameter%syncBalance
                    DUG 2;      # @storage : @parameter%syncBalance : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%syncBalance : @storage
                    SWAP;       # @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUP;        # @parameter%syncBalance : @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                    DUG 2;      # @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%syncBalance : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%syncBalance : @storage
                    MEM;        # bool : @parameter%syncBalance : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%syncBalance
                        # self.data.holders[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%syncBalance
                        DUP;        # @storage : @storage : @parameter%syncBalance
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : @parameter%syncBalance
                        SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        DIG 5;      # @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                        DUP;        # @parameter%syncBalance : @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                        DUG 6;      # @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        PUSH (option (pair (map %approvals address nat) (nat %balance))) (Some (Pair {} 0)); # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        SWAP;       # address : option (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        UPDATE;     # big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        SWAP;       # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%syncBalance
                        SWAP;       # @parameter%syncBalance : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }; # @parameter%syncBalance : @storage
                    SWAP;       # @storage : @parameter%syncBalance
                    # self.data.holders[params.address].balance = params.value # @storage : @parameter%syncBalance
                    DUP;        # @storage : @storage : @parameter%syncBalance
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : @parameter%syncBalance
                    SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DIG 6;      # @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUP;        # @parameter%syncBalance : @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUG 7;      # @parameter%syncBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    IF_SOME
                      {}
                      {
                        PUSH int 590; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    CAR;        # map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%syncBalance
                    DIG 7;      # @parameter%syncBalance : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    CDR;        # nat : map address nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # map address nat : nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (map address nat) nat : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    UPDATE;     # big_map address (pair (map address nat) nat) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map address nat) nat) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }; # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                NIL operation; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
              }
              {
                IF_LEFT
                  {
                    # == voteForDispute ==
                    # sp.verify(params.value > 0) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    PUSH nat 0; # nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    LT;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: params.value > 0"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(self.data.holders.contains(sp.sender)) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders.contains(sp.sender)"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    # sp.verify(self.data.holders[sp.sender].balance >= params.value) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%voteForDispute
                    DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                    DUG 3;      # @storage : nat : @parameter%voteForDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1107 # @some : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1107; # int : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForDispute : @storage
                    CDR;        # nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    GE;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].balance >= params.value"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(self.data.disputes.contains(params.entryId)) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.disputes.contains(params.entryId)"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(sp.now < self.data.disputes[params.entryId].expiry) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1113 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1113; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CADAR;      # timestamp : @parameter%voteForDispute : @storage
                    NOW;        # timestamp : timestamp : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    LT;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now < self.data.disputes[params.entryId].expiry"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(~ (self.data.disputes[params.entryId].voters.contains(sp.sender))) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1113 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1113; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CDAR;       # map address nat : @parameter%voteForDispute : @storage
                    SENDER;     # address : map address nat : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ (self.data.disputes[params.entryId].voters.contains(sp.sender))"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(sp.now < self.data.disputes[params.entryId].expiry) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADAAR;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @storage
                    DUG 2;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:1113 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 1113; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CADAR;      # timestamp : @parameter%voteForDispute : @storage
                    NOW;        # timestamp : timestamp : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    LT;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now < self.data.disputes[params.entryId].expiry"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    SWAP;       # @storage : @parameter%voteForDispute
                    # sp.verify(self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))) # @storage : @parameter%voteForDispute
                    DUP;        # @storage : @storage : @parameter%voteForDispute
                    DUG 2;      # @storage : @parameter%voteForDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:653 # @some : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 653; # int : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForDispute : @storage
                    CAR;        # map address nat : @parameter%voteForDispute : @storage
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : map address nat : @parameter%voteForDispute : @storage
                    ADDRESS;    # address : map address nat : @parameter%voteForDispute : @storage
                    MEM;        # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    # sp.verify(self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    DIG 2;      # @storage : nat : @parameter%voteForDispute
                    DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                    DUG 3;      # @storage : nat : @parameter%voteForDispute : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:654 # @some : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 654; # int : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForDispute : @storage
                    CAR;        # map address nat : nat : @parameter%voteForDispute : @storage
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : map address nat : nat : @parameter%voteForDispute : @storage
                    ADDRESS;    # address : map address nat : nat : @parameter%voteForDispute : @storage
                    GET;        # option nat : nat : @parameter%voteForDispute : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:654 # @some : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH int 654; # int : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : @parameter%voteForDispute : @storage
                    GE;         # bool : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value"; # string : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForDispute : @storage
                    # y = sp.local("y", params.value) # @parameter%voteForDispute : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : @storage
                    CDDR;       # nat : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : nat : @storage
                    # while (y.value * y.value) > params.value : ... # @parameter%voteForDispute : nat : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : @storage
                    DUG 2;      # @parameter%voteForDispute : nat : @parameter%voteForDispute : @storage
                    CDDR;       # nat : nat : @parameter%voteForDispute : @storage
                    SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                    MUL;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                    GT;         # bool : nat : @parameter%voteForDispute : @storage
                    LOOP
                      {
                        # y.value = ((params.value // y.value) + y.value) // 2 # nat : @parameter%voteForDispute : @storage
                        PUSH nat 2; # nat : nat : @parameter%voteForDispute : @storage
                        SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        DIG 3;      # @parameter%voteForDispute : nat : nat : nat : @storage
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : nat : nat : @storage
                        DUG 4;      # @parameter%voteForDispute : nat : nat : nat : @parameter%voteForDispute : @storage
                        CDDR;       # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        EDIV;       # option (pair nat nat) : nat : nat : @parameter%voteForDispute : @storage
                        IF_SOME
                          {
                            CAR;        # nat : nat : nat : @parameter%voteForDispute : @storage
                          }
                          {
                            PUSH int 660; # int : nat : nat : @parameter%voteForDispute : @storage
                            FAILWITH;   # FAILED
                          }; # nat : nat : nat : @parameter%voteForDispute : @storage
                        ADD;        # nat : nat : @parameter%voteForDispute : @storage
                        EDIV;       # option (pair nat nat) : @parameter%voteForDispute : @storage
                        IF_SOME
                          {
                            CAR;        # nat : @parameter%voteForDispute : @storage
                          }
                          {
                            PUSH int 660; # int : @parameter%voteForDispute : @storage
                            FAILWITH;   # FAILED
                          }; # nat : @parameter%voteForDispute : @storage
                        SWAP;       # @parameter%voteForDispute : nat : @storage
                        # check for next loop: (y.value * y.value) > params.value # @parameter%voteForDispute : nat : @storage
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : @storage
                        DUG 2;      # @parameter%voteForDispute : nat : @parameter%voteForDispute : @storage
                        CDDR;       # nat : nat : @parameter%voteForDispute : @storage
                        SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        DUG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        MUL;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                        GT;         # bool : nat : @parameter%voteForDispute : @storage
                      }; # nat : @parameter%voteForDispute : @storage
                    SWAP;       # @parameter%voteForDispute : nat : @storage
                    # sp.verify(((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))) # @parameter%voteForDispute : nat : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : @storage
                    DUG 2;      # @parameter%voteForDispute : nat : @parameter%voteForDispute : @storage
                    CDDR;       # nat : nat : @parameter%voteForDispute : @storage
                    SWAP;       # nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                    DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                    MUL;        # nat : nat : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                    LE;         # bool : nat : @parameter%voteForDispute : @storage
                    IF
                      {
                        DUP;        # nat : nat : @parameter%voteForDispute : @storage
                        PUSH nat 1; # nat : nat : nat : @parameter%voteForDispute : @storage
                        ADD;        # nat : nat : @parameter%voteForDispute : @storage
                        PUSH nat 1; # nat : nat : nat : @parameter%voteForDispute : @storage
                        DIG 2;      # nat : nat : nat : @parameter%voteForDispute : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        DUG 3;      # nat : nat : nat : nat : @parameter%voteForDispute : @storage
                        ADD;        # nat : nat : nat : @parameter%voteForDispute : @storage
                        MUL;        # nat : nat : @parameter%voteForDispute : @storage
                        DIG 2;      # @parameter%voteForDispute : nat : nat : @storage
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : nat : nat : @storage
                        DUG 3;      # @parameter%voteForDispute : nat : nat : @parameter%voteForDispute : @storage
                        CDDR;       # nat : nat : nat : @parameter%voteForDispute : @storage
                        COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                        LT;         # bool : nat : @parameter%voteForDispute : @storage
                      }
                      {
                        PUSH bool False; # bool : nat : @parameter%voteForDispute : @storage
                      }; # bool : nat : @parameter%voteForDispute : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: ((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))"; # string : nat : @parameter%voteForDispute : @storage
                        FAILWITH;   # FAILED
                      }; # nat : @parameter%voteForDispute : @storage
                    # if params.inFavor == True: # nat : @parameter%voteForDispute : @storage
                    PUSH bool True; # bool : nat : @parameter%voteForDispute : @storage
                    DIG 2;      # @parameter%voteForDispute : bool : nat : @storage
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : bool : nat : @storage
                    DUG 3;      # @parameter%voteForDispute : bool : nat : @parameter%voteForDispute : @storage
                    CDAR;       # bool : bool : nat : @parameter%voteForDispute : @storage
                    COMPARE;    # int : nat : @parameter%voteForDispute : @storage
                    EQ;         # bool : nat : @parameter%voteForDispute : @storage
                    IF
                      {
                        # self.data.disputes[params.entryId].votesYes += y.value # nat : @parameter%voteForDispute : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForDispute
                        DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : nat : @parameter%voteForDispute
                        SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DIG 7;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat
                        DUG 8;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # nat : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUG 2;      # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 665; # int : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                            FAILWITH;   # FAILED
                          }; # @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # @some : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # @some : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # map address nat : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # nat : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DIG 10;     # nat : nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        ADD;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair nat nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map address nat) (pair nat nat) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # nat : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForDispute
                        SWAP;       # @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }
                      {
                        # self.data.disputes[params.entryId].votesNo += y.value # nat : @parameter%voteForDispute : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForDispute
                        DUP;        # @storage : @storage : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @storage : nat : @parameter%voteForDispute
                        SWAP;       # @storage : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DIG 7;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat
                        DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat
                        DUG 8;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # nat : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUG 2;      # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        IF_SOME
                          {}
                          {
                            PUSH int 667; # int : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                            FAILWITH;   # FAILED
                          }; # @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # @some : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # @some : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # map address nat : pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CDR;        # nat : pair (nat %votesNo) (nat %votesYes) : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        CAR;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : nat : @parameter%voteForDispute
                        DIG 10;     # nat : nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        ADD;        # nat : nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair nat nat : map address nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map address nat) (pair nat nat) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # nat : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes)))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForDispute
                        SWAP;       # @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                      }; # @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForDispute
                    # self.data.disputes[params.entryId].voters[sp.sender] = params.value # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForDispute
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForDispute
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForDispute
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUP;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CAR;        # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CDR;        # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUP;        # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CDR;        # pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CAR;        # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUP;        # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CAR;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUP;        # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DIG 6;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUG 7;      # @parameter%voteForDispute : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CAR;        # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUP;        # nat : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUG 2;      # nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    GET;        # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    IF_SOME
                      {}
                      {
                        PUSH int 669; # int : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                        FAILWITH;   # FAILED
                      }; # @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUP;        # @some : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CAR;        # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : @some : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # @some : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CDR;        # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DUP;        # pair (map address nat) (pair nat nat) : pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CDR;        # pair nat nat : pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # pair (map address nat) (pair nat nat) : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CAR;        # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SENDER;     # address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    DIG 10;     # @parameter%voteForDispute : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUP;        # @parameter%voteForDispute : @parameter%voteForDispute : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))
                    DUG 11;     # @parameter%voteForDispute : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    CDDR;       # nat : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SOME;       # option nat : address : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # address : option nat : map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    UPDATE;     # map address nat : pair nat nat : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    PAIR;       # pair (map address nat) (pair nat nat) : pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # pair (address %disputer) (pair (timestamp %expiry) (int %resolved)) : pair (map address nat) (pair nat nat) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SOME;       # option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : nat : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # nat : option (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    UPDATE;     # map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat))) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    PAIR;       # pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    SWAP;       # pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee)) : pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForDispute
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForDispute
                    SWAP;       # @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.to_address(sp.self), value = params.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    NIL operation; # list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DIG 2;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%voteForDispute
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%voteForDispute
                    DUG 3;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDDDDR;     # option address : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    IF_SOME
                      {}
                      {
                        PUSH int 843; # int : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    IF_SOME
                      {}
                      {
                        PUSH int 679; # int : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%voteForDispute : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    DIG 3;      # @parameter%voteForDispute : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CDDR;       # nat : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    ADDRESS;    # address : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    SENDER;     # address : pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                    CONS;       # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
                  }
                  {
                    SWAP;       # @storage : @parameter%voteForNewRoundProposal
                    # == voteForNewRoundProposal ==
                    # sp.verify((self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)) # @storage : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                    DUG 2;      # @storage : @parameter%voteForNewRoundProposal : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                    MEM;        # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {
                        PUSH nat 0; # nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                        DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                        SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                        GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            # of_some: Get-item:783 # @some : nat : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 783; # int : nat : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # @some : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                        GT;         # bool : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%voteForNewRoundProposal : @storage
                      }; # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: (self.data.holders.contains(sp.sender)) & (self.data.holders[sp.sender].balance > 0)"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%voteForNewRoundProposal
                    # sp.verify(self.data.newRoundProposalActive) # @storage : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                    DUG 2;      # @storage : @parameter%voteForNewRoundProposal : @storage
                    CDADDR;     # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposalActive"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    # sp.verify(params.value > 0) # @parameter%voteForNewRoundProposal : @storage
                    DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : @storage
                    CDR;        # nat : @parameter%voteForNewRoundProposal : @storage
                    PUSH nat 0; # nat : nat : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                    LT;         # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: params.value > 0"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%voteForNewRoundProposal
                    # sp.verify(sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry) # @storage : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%voteForNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:793 # @some : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH int 793; # int : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForNewRoundProposal : @storage
                    CADAR;      # timestamp : @parameter%voteForNewRoundProposal : @storage
                    NOW;        # timestamp : timestamp : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                    LT;         # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    # sp.verify(self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0) # @parameter%voteForNewRoundProposal : @storage
                    PUSH int 0; # int : @parameter%voteForNewRoundProposal : @storage
                    DIG 2;      # @storage : int : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : int : @parameter%voteForNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : int : @parameter%voteForNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal
                    DUG 4;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : int : @parameter%voteForNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:793 # @some : int : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH int 793; # int : int : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : int : @parameter%voteForNewRoundProposal : @storage
                    CDAAR;      # int : int : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                    EQ;         # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.newRoundProposals[self.data.newRoundProposalId].resolved == 0"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%voteForNewRoundProposal
                    # sp.verify(~ (self.data.newRoundProposals[self.data.newRoundProposalId].voters.contains(sp.sender))) # @storage : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%voteForNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:793 # @some : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH int 793; # int : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForNewRoundProposal : @storage
                    CDDADR;     # map address nat : @parameter%voteForNewRoundProposal : @storage
                    SENDER;     # address : map address nat : @parameter%voteForNewRoundProposal : @storage
                    MEM;        # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {
                        PUSH string "WrongCondition: ~ (self.data.newRoundProposals[self.data.newRoundProposalId].voters.contains(sp.sender))"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%voteForNewRoundProposal
                    # sp.verify(sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry) # @storage : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                    CDDADR;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @storage : @parameter%voteForNewRoundProposal
                    SWAP;       # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal
                    DUG 3;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : @parameter%voteForNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:793 # @some : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH int 793; # int : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForNewRoundProposal : @storage
                    CADAR;      # timestamp : @parameter%voteForNewRoundProposal : @storage
                    NOW;        # timestamp : timestamp : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                    LT;         # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.now < self.data.newRoundProposals[self.data.newRoundProposalId].expiry"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # @storage : @parameter%voteForNewRoundProposal
                    # sp.verify(self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))) # @storage : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : @parameter%voteForNewRoundProposal
                    DUG 2;      # @storage : @parameter%voteForNewRoundProposal : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%voteForNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:653 # @some : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH int 653; # int : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%voteForNewRoundProposal : @storage
                    CAR;        # map address nat : @parameter%voteForNewRoundProposal : @storage
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : map address nat : @parameter%voteForNewRoundProposal : @storage
                    ADDRESS;    # address : map address nat : @parameter%voteForNewRoundProposal : @storage
                    MEM;        # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals.contains(sp.to_address(sp.self))"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    # sp.verify(self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value) # @parameter%voteForNewRoundProposal : @storage
                    DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : @storage
                    CDR;        # nat : @parameter%voteForNewRoundProposal : @storage
                    DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                    DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                    DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                    CADADR;     # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                    SENDER;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%voteForNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:654 # @some : nat : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH int 654; # int : nat : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForNewRoundProposal : @storage
                    CAR;        # map address nat : nat : @parameter%voteForNewRoundProposal : @storage
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : map address nat : nat : @parameter%voteForNewRoundProposal : @storage
                    ADDRESS;    # address : map address nat : nat : @parameter%voteForNewRoundProposal : @storage
                    GET;        # option nat : nat : @parameter%voteForNewRoundProposal : @storage
                    IF_SOME
                      {
                        # of_some: Get-item:654 # @some : nat : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH int 654; # int : nat : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @some : nat : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : @parameter%voteForNewRoundProposal : @storage
                    GE;         # bool : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.holders[sp.sender].approvals[sp.to_address(sp.self)] >= params.value"; # string : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%voteForNewRoundProposal : @storage
                    # y = sp.local("y", params.value) # @parameter%voteForNewRoundProposal : @storage
                    DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : @storage
                    CDR;        # nat : @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # @parameter%voteForNewRoundProposal : nat : @storage
                    # while (y.value * y.value) > params.value : ... # @parameter%voteForNewRoundProposal : nat : @storage
                    DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : @storage
                    DUG 2;      # @parameter%voteForNewRoundProposal : nat : @parameter%voteForNewRoundProposal : @storage
                    CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                    DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    DUG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    MUL;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                    GT;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                    LOOP
                      {
                        # y.value = ((params.value // y.value) + y.value) // 2 # nat : @parameter%voteForNewRoundProposal : @storage
                        PUSH nat 2; # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 3;      # @parameter%voteForNewRoundProposal : nat : nat : nat : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : nat : nat : @storage
                        DUG 4;      # @parameter%voteForNewRoundProposal : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        EDIV;       # option (pair nat nat) : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            CAR;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 660; # int : nat : nat : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        ADD;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        EDIV;       # option (pair nat nat) : @parameter%voteForNewRoundProposal : @storage
                        IF_SOME
                          {
                            CAR;        # nat : @parameter%voteForNewRoundProposal : @storage
                          }
                          {
                            PUSH int 660; # int : @parameter%voteForNewRoundProposal : @storage
                            FAILWITH;   # FAILED
                          }; # nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @parameter%voteForNewRoundProposal : nat : @storage
                        # check for next loop: (y.value * y.value) > params.value # @parameter%voteForNewRoundProposal : nat : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : @storage
                        DUG 2;      # @parameter%voteForNewRoundProposal : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        MUL;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                        GT;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                      }; # nat : @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # @parameter%voteForNewRoundProposal : nat : @storage
                    # sp.verify(((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))) # @parameter%voteForNewRoundProposal : nat : @storage
                    DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : @storage
                    DUG 2;      # @parameter%voteForNewRoundProposal : nat : @parameter%voteForNewRoundProposal : @storage
                    CDR;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                    SWAP;       # nat : nat : @parameter%voteForNewRoundProposal : @storage
                    DUP;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    DUG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    MUL;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                    LE;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {
                        DUP;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        PUSH nat 1; # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        ADD;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        PUSH nat 1; # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DUG 3;      # nat : nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        ADD;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        MUL;        # nat : nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # @parameter%voteForNewRoundProposal : nat : nat : @storage
                        DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : nat : nat : @storage
                        DUG 3;      # @parameter%voteForNewRoundProposal : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # nat : nat : nat : @parameter%voteForNewRoundProposal : @storage
                        COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                        LT;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                      }
                      {
                        PUSH bool False; # bool : nat : @parameter%voteForNewRoundProposal : @storage
                      }; # bool : nat : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: ((y.value * y.value) <= params.value) & (params.value < ((y.value + 1) * (y.value + 1)))"; # string : nat : @parameter%voteForNewRoundProposal : @storage
                        FAILWITH;   # FAILED
                      }; # nat : @parameter%voteForNewRoundProposal : @storage
                    # if params.inFavor == True: # nat : @parameter%voteForNewRoundProposal : @storage
                    PUSH bool True; # bool : nat : @parameter%voteForNewRoundProposal : @storage
                    DIG 2;      # @parameter%voteForNewRoundProposal : bool : nat : @storage
                    DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : bool : nat : @storage
                    DUG 3;      # @parameter%voteForNewRoundProposal : bool : nat : @parameter%voteForNewRoundProposal : @storage
                    CAR;        # bool : bool : nat : @parameter%voteForNewRoundProposal : @storage
                    COMPARE;    # int : nat : @parameter%voteForNewRoundProposal : @storage
                    EQ;         # bool : nat : @parameter%voteForNewRoundProposal : @storage
                    IF
                      {
                        # self.data.newRoundProposals[self.data.newRoundProposalId].votesYes += y.value # nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                        DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # pair (option %roundManager address) (option %token address) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 8;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 665; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # nat : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DIG 11;     # nat : nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        ADD;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair nat nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                      }
                      {
                        # self.data.newRoundProposals[self.data.newRoundProposalId].votesNo += y.value # nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 2;      # @storage : nat : @parameter%voteForNewRoundProposal
                        DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal
                        DUG 3;      # @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # @storage : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @storage : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # @storage : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # pair (option %roundManager address) (option %token address) : pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CAR;        # nat : pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        SWAP;       # pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal : @storage
                        DIG 8;      # @storage : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        IF_SOME
                          {}
                          {
                            PUSH int 667; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                            FAILWITH;   # FAILED
                          }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes)) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DUP;        # pair (nat %votesNo) (nat %votesYes) : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CDR;        # nat : pair (nat %votesNo) (nat %votesYes) : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (nat %votesNo) (nat %votesYes) : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        CAR;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : nat : @parameter%voteForNewRoundProposal
                        DIG 11;     # nat : nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        ADD;        # nat : nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair nat nat : pair (mutez %totalFunds) (map %voters address nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForNewRoundProposal
                        PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal
                        SWAP;       # @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                      }; # @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal
                    # self.data.newRoundProposals[self.data.newRoundProposalId].voters[sp.sender] = params.value # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal
                    DUG 2;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CAR;        # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CDR;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CAR;        # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CDR;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CDR;        # pair (option %roundManager address) (option %token address) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CAR;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CAR;        # nat : pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    SWAP;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat))))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CDR;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DUP;        # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DIG 7;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CDDAAR;     # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    DUP;        # nat : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    DUG 2;      # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    GET;        # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    IF_SOME
                      {}
                      {
                        PUSH int 669; # int : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                        FAILWITH;   # FAILED
                      }; # @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    DUP;        # @some : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CAR;        # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : @some : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # @some : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CDR;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    DUP;        # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CAR;        # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CDR;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    DUP;        # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CDR;        # pair nat nat : pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CAR;        # pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    DUP;        # pair (mutez %totalFunds) (map %voters address nat) : pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CAR;        # mutez : pair (mutez %totalFunds) (map %voters address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # pair (mutez %totalFunds) (map %voters address nat) : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CDR;        # map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SENDER;     # address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    DIG 12;     # @parameter%voteForNewRoundProposal : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    DUP;        # @parameter%voteForNewRoundProposal : @parameter%voteForNewRoundProposal : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))
                    DUG 13;     # @parameter%voteForNewRoundProposal : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    CDR;        # nat : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SOME;       # option nat : address : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # address : option nat : map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    UPDATE;     # map address nat : mutez : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # mutez : map address nat : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair mutez (map address nat) : pair nat nat : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair (pair mutez (map address nat)) (pair nat nat) : pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start)) : pair (pair mutez (map address nat)) (pair nat nat) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)) : pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name))) : pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SOME;       # option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # nat : option (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    UPDATE;     # big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : nat : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # nat : big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat))))) : pair (option %roundManager address) (option %token address) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive)) : pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : @parameter%voteForNewRoundProposal
                    SWAP;       # pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake))) : pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))) : @parameter%voteForNewRoundProposal
                    PAIR;       # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : @parameter%voteForNewRoundProposal
                    SWAP;       # @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.to_address(sp.self), value = params.value), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_", ("to_", "value"))), self.data.token.open_some(), entry_point='transfer').open_some()) # @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    NIL operation; # list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DIG 2;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%voteForNewRoundProposal
                    DUP;        # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%voteForNewRoundProposal
                    DUG 3;      # pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address)))) : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CDDDDR;     # option address : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    IF_SOME
                      {}
                      {
                        PUSH int 843; # int : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CONTRACT %transfer (pair (address %from_) (pair (address %to_) (nat %value))); # option (contract (pair (address %from_) (pair (address %to_) (nat %value)))) : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    IF_SOME
                      {}
                      {
                        PUSH int 679; # int : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                        FAILWITH;   # FAILED
                      }; # @some : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%voteForNewRoundProposal : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    DIG 3;      # @parameter%voteForNewRoundProposal : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CDR;        # nat : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    SELF;       # contract (or (or (or (string %donateToRound) (or (unit %executeNewRoundProposal) (unit %listNewRound))) (or (pair %proposeNewRound (pair (timestamp %endTime) (timestamp %expiry)) (pair (string %name) (timestamp %startTime))) (or (nat %raiseDispute) (address %setRoundManagerContract)))) (or (or (address %setTokenContract) (or (nat %settleDispute) (unit %settleRound))) (or (or (pair %syncApproval (address %address) (pair (address %owner) (nat %value))) (pair %syncBalance (address %address) (nat %value))) (or (pair %voteForDispute (nat %entryId) (pair (bool %inFavor) (nat %value))) (pair %voteForNewRoundProposal (bool %inFavor) (nat %value)))))) : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    ADDRESS;    # address : nat : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    PAIR %to_ %value; # pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    SENDER;     # address : pair (address %to_) (nat %value) : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    PAIR %from_; # pair (address %from_) (pair (address %to_) (nat %value)) : mutez : @some : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                    CONS;       # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair mutez (map address nat)) (pair nat nat)))))) (pair (option %roundManager address) (option %token address))))
                  }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map address nat) (pair nat nat)))) (big_map address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
              }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map address (pair (map address nat) nat))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
          }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option address) (option address))))
      }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
    NIL operation; # list operation : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
    SWAP;       # list operation : list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
      }; # list operation : pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))
    PAIR;       # pair (list operation) (pair (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair nat (big_map nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair int (pair (map address (pair (mutez %amount) (string %name))) timestamp)) (pair (pair mutez (map address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address)))))
  };