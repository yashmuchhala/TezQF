Storage: sp.TRecord(admin = sp.TAddress, currentOnGoingRoundProposalId = sp.TInt, disputeFee = sp.TNat, disputes = sp.TMap(sp.TNat, sp.TRecord(disputer = sp.TAddress, expiry = sp.TTimestamp, resolved = sp.TInt, voters = sp.TMap(sp.TAddress, sp.TNat), votesNo = sp.TNat, votesYes = sp.TNat).layout((("disputer", ("expiry", "resolved")), ("voters", ("votesNo", "votesYes"))))), holders = sp.TBigMap(sp.TAddress, sp.TRecord(approvals = sp.TMap(sp.TAddress, sp.TNat), balance = sp.TNat).layout(("approvals", "balance"))), minDisputeSettleVotes = sp.TNat, minNewRoundProposalStake = sp.TNat, minNewRoundProposalVotes = sp.TNat, minimumVoteDifference = sp.TInt, newRoundProposalActive = sp.TBool, newRoundProposalId = sp.TNat, newRoundProposals = sp.TBigMap(sp.TNat, sp.TRecord(created = sp.TTimestamp, creator = sp.TAddress, end = sp.TTimestamp, expiry = sp.TTimestamp, listed = sp.TBool, name = sp.TString, resolved = sp.TInt, sponsorToFunds = sp.TMap(sp.TAddress, sp.TRecord(amount = sp.TMutez, name = sp.TString).layout(("amount", "name"))), start = sp.TTimestamp, totalFunds = sp.TMutez, voters = sp.TMap(sp.TAddress, sp.TNat), votesNo = sp.TNat, votesYes = sp.TNat).layout(((("created", ("creator", "end")), ("expiry", ("listed", "name"))), (("resolved", ("sponsorToFunds", "start")), (("totalFunds", "voters"), ("votesNo", "votesYes")))))), roundManager = sp.TOption(sp.TAddress), token = sp.TOption(sp.TAddress)).layout(((("admin", ("currentOnGoingRoundProposalId", "disputeFee")), (("disputes", "holders"), ("minDisputeSettleVotes", "minNewRoundProposalStake"))), (("minNewRoundProposalVotes", ("minimumVoteDifference", "newRoundProposalActive")), (("newRoundProposalId", "newRoundProposals"), ("roundManager", "token")))))
Params: sp.TVariant(donateToRound = sp.TRecord(name = sp.TString).layout("name"), executeNewRoundProposal = sp.TUnit, listNewRound = sp.TUnit, proposeNewRound = sp.TRecord(endTime = sp.TTimestamp, expiry = sp.TTimestamp, name = sp.TString, startTime = sp.TTimestamp).layout((("endTime", "expiry"), ("name", "startTime"))), raiseDispute = sp.TRecord(entryId = sp.TNat).layout("entryId"), setRoundManagerContract = sp.TRecord(_roundManager = sp.TAddress).layout("_roundManager"), setTokenContract = sp.TAddress, settleDispute = sp.TRecord(entryId = sp.TNat).layout("entryId"), settleRound = sp.TUnit, syncApproval = sp.TRecord(address = sp.TAddress, owner = sp.TAddress, value = sp.TNat).layout(("address", ("owner", "value"))), syncBalance = sp.TRecord(address = sp.TAddress, value = sp.TNat).layout(("address", "value")), voteForDispute = sp.TRecord(entryId = sp.TNat, inFavor = sp.TBool, value = sp.TNat).layout(("entryId", ("inFavor", "value"))), voteForNewRoundProposal = sp.TRecord(inFavor = sp.TBool, value = sp.TNat).layout(("inFavor", "value"))).layout(((("donateToRound", ("executeNewRoundProposal", "listNewRound")), ("proposeNewRound", ("raiseDispute", "setRoundManagerContract"))), (("setTokenContract", ("settleDispute", "settleRound")), (("syncApproval", "syncBalance"), ("voteForDispute", "voteForNewRoundProposal")))))