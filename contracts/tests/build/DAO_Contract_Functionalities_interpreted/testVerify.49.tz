parameter (pair (pair %k0 (pair (pair (address %admin) (pair (int %currentOnGoingRoundProposalId) (nat %disputeFee))) (pair (pair (map %disputes nat (pair (pair (address %disputer) (pair (timestamp %expiry) (int %resolved))) (pair (map %voters address nat) (pair (nat %votesNo) (nat %votesYes))))) (big_map %holders address (pair (map %approvals address nat) (nat %balance)))) (pair (nat %minDisputeSettleVotes) (nat %minNewRoundProposalStake)))) (pair (pair (nat %minNewRoundProposalVotes) (pair (int %minimumVoteDifference) (bool %newRoundProposalActive))) (pair (pair (nat %newRoundProposalId) (big_map %newRoundProposals nat (pair (pair (pair (timestamp %created) (pair (address %creator) (timestamp %end))) (pair (timestamp %expiry) (pair (bool %listed) (string %name)))) (pair (pair (int %resolved) (pair (map %sponsorToFunds address (pair (mutez %amount) (string %name))) (timestamp %start))) (pair (pair (mutez %totalFunds) (map %voters address nat)) (pair (nat %votesNo) (nat %votesYes))))))) (pair (option %roundManager address) (option %token address))))) (pair (pair %k2 (pair (address %admin) (address %daoMultiSig)) (pair (nat %price) (option %token address))) (pair (pair %k3 (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (address %daoContract) (pair (bool %paused) (nat %totalSupply)))) (pair %k4 (pair (nat %currentRound) (address %daoContractAddress)) (pair (bool %isRoundActive) (big_map %rounds nat (pair (pair (pair (timestamp %end) (big_map %entries nat (pair (pair (pair (address %address) (list %contributions (pair (pair (address %address) (nat %amount)) (pair (mutez %clrMatch) (timestamp %timestamp))))) (pair (string %description) (timestamp %disputeEnd))) (pair (pair (bool %disputed) (bool %disqualified)) (pair (mutez %sponsorshipWon) (pair (nat %subsidyPower) (mutez %totalContribution))))))) (pair (nat %entryId) (string %name))) (pair (pair (map %sponsors address (pair (mutez %amount) (string %name))) (timestamp %start)) (pair (mutez %totalContribution) (pair (mutez %totalSponsorship) (nat %totalSubsidyPower)))))))))));
storage   unit;
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    # == verify ==
    # sp.verify(params.k4.currentRound == 0) # @parameter : @storage
    CDDDAAR;    # nat : @storage
    PUSH nat 0; # nat : nat : @storage
    COMPARE;    # int : @storage
    EQ;         # bool : @storage
    IF
      {}
      {
        PUSH string "WrongCondition: params.k4.currentRound == 0"; # string : @storage
        FAILWITH;   # FAILED
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };